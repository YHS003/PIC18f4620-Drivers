

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Jun 27 13:58:48 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    18   000000                     
    19                           ; Generated 17/10/2023 GMT
    20                           ; 
    21                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC18F4620 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53   000000                     
    54                           	psect	idataCOMRAM
    55   0012D0                     __pidataCOMRAM:
    56                           	callstack 0
    57                           
    58                           ;initializer for _port_registers
    59   0012D0  80                 	db	128
    60   0012D1  0F                 	db	15
    61   0012D2  81                 	db	129
    62   0012D3  0F                 	db	15
    63   0012D4  82                 	db	130
    64   0012D5  0F                 	db	15
    65   0012D6  83                 	db	131
    66   0012D7  0F                 	db	15
    67   0012D8  84                 	db	132
    68   0012D9  0F                 	db	15
    69                           
    70                           ;initializer for _lat_registers
    71   0012DA  89                 	db	137
    72   0012DB  0F                 	db	15
    73   0012DC  8A                 	db	138
    74   0012DD  0F                 	db	15
    75   0012DE  8B                 	db	139
    76   0012DF  0F                 	db	15
    77   0012E0  8C                 	db	140
    78   0012E1  0F                 	db	15
    79   0012E2  8D                 	db	141
    80   0012E3  0F                 	db	15
    81                           
    82                           ;initializer for _tris_registers
    83   0012E4  92                 	db	146
    84   0012E5  0F                 	db	15
    85   0012E6  93                 	db	147
    86   0012E7  0F                 	db	15
    87   0012E8  94                 	db	148
    88   0012E9  0F                 	db	15
    89   0012EA  95                 	db	149
    90   0012EB  0F                 	db	15
    91   0012EC  96                 	db	150
    92   0012ED  0F                 	db	15
    93   000000                     _PORTE	set	3972
    94   000000                     _PORTD	set	3971
    95   000000                     _PORTC	set	3970
    96   000000                     _PORTB	set	3969
    97   000000                     _PORTA	set	3968
    98   000000                     _LATA	set	3977
    99   000000                     _TRISA	set	3986
   100   000000                     _TRISE	set	3990
   101   000000                     _TRISD	set	3989
   102   000000                     _TRISC	set	3988
   103   000000                     _TRISB	set	3987
   104   000000                     _LATE	set	3981
   105   000000                     _LATD	set	3980
   106   000000                     _LATC	set	3979
   107   000000                     _LATB	set	3978
   108                           
   109                           ; #config settings
   110                           
   111                           	psect	cinit
   112   00129A                     __pcinit:
   113                           	callstack 0
   114   00129A                     start_initialization:
   115                           	callstack 0
   116   00129A                     __initialization:
   117                           	callstack 0
   118                           
   119                           ; Initialize objects allocated to COMRAM (30 bytes)
   120                           ; load TBLPTR registers with __pidataCOMRAM
   121   00129A  0ED0               	movlw	low __pidataCOMRAM
   122   00129C  6EF6               	movwf	tblptrl,c
   123   00129E  0E12               	movlw	high __pidataCOMRAM
   124   0012A0  6EF7               	movwf	tblptrh,c
   125   0012A2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   126   0012A4  6EF8               	movwf	tblptru,c
   127   0012A6  EE00  F001         	lfsr	0,__pdataCOMRAM
   128   0012AA  EE10 F01E          	lfsr	1,30
   129   0012AE                     copy_data0:
   130   0012AE  0009               	tblrd		*+
   131   0012B0  CFF5 FFEE          	movff	tablat,postinc0
   132   0012B4  50E5               	movf	postdec1,w,c
   133   0012B6  50E1               	movf	fsr1l,w,c
   134   0012B8  E1FA               	bnz	copy_data0
   135                           
   136                           ; Clear objects allocated to COMRAM (9 bytes)
   137   0012BA  EE00  F02C         	lfsr	0,__pbssCOMRAM
   138   0012BE  0E09               	movlw	9
   139   0012C0                     clear_0:
   140   0012C0  6AEE               	clrf	postinc0,c
   141   0012C2  06E8               	decf	wreg,f,c
   142   0012C4  E1FD               	bnz	clear_0
   143   0012C6                     end_of_initialization:
   144                           	callstack 0
   145   0012C6                     __end_of__initialization:
   146                           	callstack 0
   147   0012C6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   148   0012C8  6EF8               	movwf	tblptru,c
   149   0012CA  0100               	movlb	0
   150   0012CC  EF01  F008         	goto	_main	;jump to C main() function
   151                           
   152                           	psect	bssCOMRAM
   153   00002C                     __pbssCOMRAM:
   154                           	callstack 0
   155   00002C                     _ret_val:
   156                           	callstack 0
   157   00002C                     	ds	1
   158   00002D                     _LEDs:
   159                           	callstack 0
   160   00002D                     	ds	8
   161                           
   162                           	psect	dataCOMRAM
   163   000001                     __pdataCOMRAM:
   164                           	callstack 0
   165   000001                     _port_registers:
   166                           	callstack 0
   167   000001                     	ds	10
   168   00000B                     _lat_registers:
   169                           	callstack 0
   170   00000B                     	ds	10
   171   000015                     _tris_registers:
   172                           	callstack 0
   173   000015                     	ds	10
   174                           
   175                           	psect	cstackCOMRAM
   176   00001F                     __pcstackCOMRAM:
   177                           	callstack 0
   178   00001F                     gpio_pin_write_logic@pin_config:
   179                           	callstack 0
   180   00001F                     gpio_port_direction_intialize@direction:
   181                           	callstack 0
   182   00001F                     gpio_port_write_logic@logic:
   183                           	callstack 0
   184                           
   185                           ; 1 bytes @ 0x0
   186   00001F                     	ds	1
   187   000020                     ??_gpio_port_direction_intialize:
   188   000020                     ??_gpio_port_write_logic:
   189   000020                     gpio_pin_write_logic@logic:
   190                           	callstack 0
   191                           
   192                           ; 1 bytes @ 0x1
   193   000020                     	ds	1
   194   000021                     ??_gpio_pin_write_logic:
   195                           
   196                           ; 1 bytes @ 0x2
   197   000021                     	ds	1
   198   000022                     gpio_port_direction_intialize@return_value:
   199                           	callstack 0
   200   000022                     gpio_port_write_logic@return_value:
   201                           	callstack 0
   202                           
   203                           ; 1 bytes @ 0x3
   204   000022                     	ds	1
   205   000023                     gpio_port_direction_intialize@port:
   206                           	callstack 0
   207   000023                     gpio_port_write_logic@port:
   208                           	callstack 0
   209                           
   210                           ; 1 bytes @ 0x4
   211   000023                     	ds	3
   212   000026                     gpio_pin_write_logic@return_value:
   213                           	callstack 0
   214                           
   215                           ; 1 bytes @ 0x7
   216   000026                     	ds	1
   217   000027                     ??_main:
   218                           
   219                           ; 1 bytes @ 0x8
   220   000027                     	ds	2
   221   000029                     main@index_187:
   222                           	callstack 0
   223                           
   224                           ; 1 bytes @ 0xA
   225   000029                     	ds	1
   226   00002A                     main@index_188:
   227                           	callstack 0
   228                           
   229                           ; 1 bytes @ 0xB
   230   00002A                     	ds	1
   231   00002B                     main@index:
   232                           	callstack 0
   233                           
   234                           ; 1 bytes @ 0xC
   235   00002B                     	ds	1
   236                           
   237 ;;
   238 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   239 ;;
   240 ;; *************** function _main *****************
   241 ;; Defined at:
   242 ;;		line 14 in file "Application.c"
   243 ;; Parameters:    Size  Location     Type
   244 ;;		None
   245 ;; Auto vars:     Size  Location     Type
   246 ;;  index           1   11[COMRAM] unsigned char 
   247 ;;  index           1   10[COMRAM] char 
   248 ;;  index           1   12[COMRAM] unsigned char 
   249 ;; Return value:  Size  Location     Type
   250 ;;                  2  127[None  ] int 
   251 ;; Registers used:
   252 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   253 ;; Tracked objects:
   254 ;;		On entry : 0/0
   255 ;;		On exit  : 0/0
   256 ;;		Unchanged: 0/0
   257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   259 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   260 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   261 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   262 ;;Total ram usage:        5 bytes
   263 ;; Hardware stack levels required when called: 1
   264 ;; This function calls:
   265 ;;		_gpio_pin_write_logic
   266 ;;		_gpio_port_direction_intialize
   267 ;;		_gpio_port_write_logic
   268 ;; This function is called by:
   269 ;;		Startup code after reset
   270 ;; This function uses a non-reentrant model
   271 ;;
   272                           
   273                           	psect	text0
   274   001002                     __ptext0:
   275                           	callstack 0
   276   001002                     _main:
   277                           	callstack 30
   278   001002                     
   279                           ;Application.c: 16:     for(uint8 index = 0; index < 8; index++)
   280   001002  0E00               	movlw	0
   281   001004  6E2B               	movwf	main@index^0,c
   282   001006                     l1065:
   283                           
   284                           ;Application.c: 17:     {;Application.c: 18:         LEDs[index].port = PORTC_INDEX;
   285   001006  502B               	movf	main@index^0,w,c
   286   001008  0F2D               	addlw	low _LEDs
   287   00100A  6ED9               	movwf	fsr2l,c
   288   00100C  6ADA               	clrf	fsr2h,c
   289   00100E  50DF               	movf	223,w,c
   290   001010  0BF8               	andlw	-8
   291   001012  0902               	iorlw	2
   292   001014  6EDF               	movwf	223,c
   293                           
   294                           ;Application.c: 19:         LEDs[index].direction = OUTPUT;
   295   001016  502B               	movf	main@index^0,w,c
   296   001018  0F2D               	addlw	low _LEDs
   297   00101A  6ED9               	movwf	fsr2l,c
   298   00101C  6ADA               	clrf	fsr2h,c
   299   00101E  9CDF               	bcf	indf2,6,c
   300                           
   301                           ;Application.c: 20:         LEDs[index].logic = LOW;
   302   001020  502B               	movf	main@index^0,w,c
   303   001022  0F2D               	addlw	low _LEDs
   304   001024  6ED9               	movwf	fsr2l,c
   305   001026  6ADA               	clrf	fsr2h,c
   306   001028  9EDF               	bcf	indf2,7,c
   307                           
   308                           ;Application.c: 21:         LEDs[index].pin = index;
   309   00102A  C02B  F027         	movff	main@index,??_main
   310   00102E  502B               	movf	main@index^0,w,c
   311   001030  0F2D               	addlw	low _LEDs
   312   001032  6ED9               	movwf	fsr2l,c
   313   001034  6ADA               	clrf	fsr2h,c
   314   001036  4627               	rlncf	??_main^0,f,c
   315   001038  4627               	rlncf	??_main^0,f,c
   316   00103A  4627               	rlncf	??_main^0,f,c
   317   00103C  50DF               	movf	223,w,c
   318   00103E  1827               	xorwf	??_main^0,w,c
   319   001040  0BC7               	andlw	-57
   320   001042  1827               	xorwf	??_main^0,w,c
   321   001044  6EDF               	movwf	223,c
   322   001046                     
   323                           ;Application.c: 22:     }
   324   001046  2A2B               	incf	main@index^0,f,c
   325   001048  0E07               	movlw	7
   326   00104A  642B               	cpfsgt	main@index^0,c
   327   00104C  EF2A  F008         	goto	u351
   328   001050  EF2C  F008         	goto	u350
   329   001054                     u351:
   330   001054  EF03  F008         	goto	l1065
   331   001058                     u350:
   332   001058                     
   333                           ;Application.c: 24:     ret_val = gpio_port_direction_intialize(PORTC_INDEX, 0x00);
   334   001058  0E00               	movlw	0
   335   00105A  6E1F               	movwf	gpio_port_direction_intialize@direction^0,c
   336   00105C  0E02               	movlw	2
   337   00105E  EC2C  F009         	call	_gpio_port_direction_intialize
   338   001062  6E2C               	movwf	_ret_val^0,c
   339                           
   340                           ;Application.c: 25:     ret_val = gpio_port_write_logic(PORTC_INDEX, 0xFF);
   341   001064  0EFF               	movlw	255
   342   001066  6E1F               	movwf	gpio_port_write_logic@logic^0,c
   343   001068  0E02               	movlw	2
   344   00106A  EC0B  F009         	call	_gpio_port_write_logic
   345   00106E  6E2C               	movwf	_ret_val^0,c
   346   001070                     
   347                           ;Application.c: 27:     _delay((unsigned long)((5000)*((uint32)4000000/4000.0)));
   348   001070  0E1A               	movlw	26
   349   001072  6E28               	movwf	(??_main+1)^0,c
   350   001074  0E5E               	movlw	94
   351   001076  6E27               	movwf	??_main^0,c
   352   001078  0E6E               	movlw	110
   353   00107A                     u387:
   354   00107A  2EE8               	decfsz	wreg,f,c
   355   00107C  D7FE               	bra	u387
   356   00107E  2E27               	decfsz	??_main^0,f,c
   357   001080  D7FC               	bra	u387
   358   001082  2E28               	decfsz	(??_main+1)^0,f,c
   359   001084  D7FA               	bra	u387
   360   001086  D000               	nop2	
   361   001088                     l1075:
   362                           
   363                           ;Application.c: 30:     {;Application.c: 31:         for(sint8 index = 3; index >= 0; in
      +                          dex--)
   364   001088  0E03               	movlw	3
   365   00108A  6E29               	movwf	main@index_187^0,c
   366   00108C                     l1081:
   367                           
   368                           ;Application.c: 32:         {;Application.c: 33:             ret_val = gpio_pin_write_lo
      +                          gic(&LEDs[index], LOW);
   369   00108C  5029               	movf	main@index_187^0,w,c
   370   00108E  0F2D               	addlw	low _LEDs
   371   001090  6E1F               	movwf	gpio_pin_write_logic@pin_config^0,c
   372   001092  0E00               	movlw	0
   373   001094  6E20               	movwf	gpio_pin_write_logic@logic^0,c
   374   001096  EC93  F008         	call	_gpio_pin_write_logic	;wreg free
   375   00109A  6E2C               	movwf	_ret_val^0,c
   376                           
   377                           ;Application.c: 34:             ret_val = gpio_pin_write_logic(&LEDs[7 - index], LOW);
   378   00109C  5029               	movf	main@index_187^0,w,c
   379   00109E  0834               	sublw	low (_LEDs+7)
   380   0010A0  6E1F               	movwf	gpio_pin_write_logic@pin_config^0,c
   381   0010A2  0E00               	movlw	0
   382   0010A4  6E20               	movwf	gpio_pin_write_logic@logic^0,c
   383   0010A6  EC93  F008         	call	_gpio_pin_write_logic	;wreg free
   384   0010AA  6E2C               	movwf	_ret_val^0,c
   385   0010AC                     
   386                           ;Application.c: 35:             _delay((unsigned long)((500)*((uint32)4000000/4000.0)));
   387   0010AC  0E03               	movlw	3
   388   0010AE  6E28               	movwf	(??_main+1)^0,c
   389   0010B0  0E8A               	movlw	138
   390   0010B2  6E27               	movwf	??_main^0,c
   391   0010B4  0E56               	movlw	86
   392   0010B6                     u397:
   393   0010B6  2EE8               	decfsz	wreg,f,c
   394   0010B8  D7FE               	bra	u397
   395   0010BA  2E27               	decfsz	??_main^0,f,c
   396   0010BC  D7FC               	bra	u397
   397   0010BE  2E28               	decfsz	(??_main+1)^0,f,c
   398   0010C0  D7FA               	bra	u397
   399   0010C2                     
   400                           ;Application.c: 36:         }
   401   0010C2  0629               	decf	main@index_187^0,f,c
   402   0010C4  BE29               	btfsc	main@index_187^0,7,c
   403   0010C6  EF69  F008         	goto	u360
   404   0010CA  EF67  F008         	goto	u361
   405   0010CE                     u361:
   406   0010CE  EF46  F008         	goto	l1081
   407   0010D2                     u360:
   408   0010D2                     
   409                           ;Application.c: 38:         for(uint8 index = 0; index < 4; index++)
   410   0010D2  0E00               	movlw	0
   411   0010D4  6E2A               	movwf	main@index_188^0,c
   412   0010D6                     l1095:
   413                           
   414                           ;Application.c: 39:         {;Application.c: 40:             ret_val = gpio_pin_write_lo
      +                          gic(&LEDs[index], HIGH);
   415   0010D6  502A               	movf	main@index_188^0,w,c
   416   0010D8  0F2D               	addlw	low _LEDs
   417   0010DA  6E1F               	movwf	gpio_pin_write_logic@pin_config^0,c
   418   0010DC  0E01               	movlw	1
   419   0010DE  6E20               	movwf	gpio_pin_write_logic@logic^0,c
   420   0010E0  EC93  F008         	call	_gpio_pin_write_logic	;wreg free
   421   0010E4  6E2C               	movwf	_ret_val^0,c
   422                           
   423                           ;Application.c: 41:             ret_val = gpio_pin_write_logic(&LEDs[7 - index], HIGH);
   424   0010E6  502A               	movf	main@index_188^0,w,c
   425   0010E8  0834               	sublw	low (_LEDs+7)
   426   0010EA  6E1F               	movwf	gpio_pin_write_logic@pin_config^0,c
   427   0010EC  0E01               	movlw	1
   428   0010EE  6E20               	movwf	gpio_pin_write_logic@logic^0,c
   429   0010F0  EC93  F008         	call	_gpio_pin_write_logic	;wreg free
   430   0010F4  6E2C               	movwf	_ret_val^0,c
   431   0010F6                     
   432                           ;Application.c: 42:             _delay((unsigned long)((500)*((uint32)4000000/4000.0)));
   433   0010F6  0E03               	movlw	3
   434   0010F8  6E28               	movwf	(??_main+1)^0,c
   435   0010FA  0E8A               	movlw	138
   436   0010FC  6E27               	movwf	??_main^0,c
   437   0010FE  0E56               	movlw	86
   438   001100                     u407:
   439   001100  2EE8               	decfsz	wreg,f,c
   440   001102  D7FE               	bra	u407
   441   001104  2E27               	decfsz	??_main^0,f,c
   442   001106  D7FC               	bra	u407
   443   001108  2E28               	decfsz	(??_main+1)^0,f,c
   444   00110A  D7FA               	bra	u407
   445   00110C                     
   446                           ;Application.c: 43:         }
   447   00110C  2A2A               	incf	main@index_188^0,f,c
   448   00110E  0E03               	movlw	3
   449   001110  642A               	cpfsgt	main@index_188^0,c
   450   001112  EF8D  F008         	goto	u371
   451   001116  EF8F  F008         	goto	u370
   452   00111A                     u371:
   453   00111A  EF6B  F008         	goto	l1095
   454   00111E                     u370:
   455   00111E  EF44  F008         	goto	l1075
   456   001122  EF00  F000         	goto	start
   457   001126                     __end_of_main:
   458                           	callstack 0
   459                           
   460 ;; *************** function _gpio_port_write_logic *****************
   461 ;; Defined at:
   462 ;;		line 218 in file "Mcal_Layer/GPIO/hal_gpio.c"
   463 ;; Parameters:    Size  Location     Type
   464 ;;  port            1    wreg     const enum E2834
   465 ;;  logic           1    0[COMRAM] const unsigned char 
   466 ;; Auto vars:     Size  Location     Type
   467 ;;  port            1    4[COMRAM] const enum E2834
   468 ;;  return_value    1    3[COMRAM] unsigned char 
   469 ;; Return value:  Size  Location     Type
   470 ;;                  1    wreg      unsigned char 
   471 ;; Registers used:
   472 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   473 ;; Tracked objects:
   474 ;;		On entry : 0/0
   475 ;;		On exit  : 0/0
   476 ;;		Unchanged: 0/0
   477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   478 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   479 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   480 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   481 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   482 ;;Total ram usage:        5 bytes
   483 ;; Hardware stack levels used: 1
   484 ;; This function calls:
   485 ;;		Nothing
   486 ;; This function is called by:
   487 ;;		_main
   488 ;; This function uses a non-reentrant model
   489 ;;
   490                           
   491                           	psect	text1
   492   001216                     __ptext1:
   493                           	callstack 0
   494   001216                     _gpio_port_write_logic:
   495                           	callstack 30
   496                           
   497                           ;incstack = 0
   498                           ;gpio_port_write_logic@port stored from wreg
   499   001216  6E23               	movwf	gpio_port_write_logic@port^0,c
   500   001218                     
   501                           ;Mcal_Layer/GPIO/hal_gpio.c: 218: Std_ReturnType gpio_port_write_logic(const port_index_
      +                          t const port, const uint8 logic);Mcal_Layer/GPIO/hal_gpio.c: 219: {;Mcal_Layer/GPIO/hal_
      +                          gpio.c: 220:     Std_ReturnType return_value = (Std_ReturnType)0x01;
   502   001218  0E01               	movlw	1
   503   00121A  6E22               	movwf	gpio_port_write_logic@return_value^0,c
   504   00121C                     
   505                           ;Mcal_Layer/GPIO/hal_gpio.c: 222:     if(((uint8)5 - 1) < port)
   506   00121C  0E04               	movlw	4
   507   00121E  6423               	cpfsgt	gpio_port_write_logic@port^0,c
   508   001220  EF14  F009         	goto	u331
   509   001224  EF16  F009         	goto	u330
   510   001228                     u331:
   511   001228  EF1A  F009         	goto	l1043
   512   00122C                     u330:
   513   00122C                     
   514                           ;Mcal_Layer/GPIO/hal_gpio.c: 223:     {;Mcal_Layer/GPIO/hal_gpio.c: 224:         return_
      +                          value = (Std_ReturnType)0x00;
   515   00122C  0E00               	movlw	0
   516   00122E  6E22               	movwf	gpio_port_write_logic@return_value^0,c
   517                           
   518                           ;Mcal_Layer/GPIO/hal_gpio.c: 225:     }
   519   001230  EF2A  F009         	goto	l1045
   520   001234                     l1043:
   521                           
   522                           ;Mcal_Layer/GPIO/hal_gpio.c: 227:     {;Mcal_Layer/GPIO/hal_gpio.c: 228:         *lat_re
      +                          gisters[port] = logic;
   523   001234  5023               	movf	gpio_port_write_logic@port^0,w,c
   524   001236  0D02               	mullw	2
   525   001238  50F3               	movf	243,w,c
   526   00123A  0F0B               	addlw	low _lat_registers
   527   00123C  6ED9               	movwf	fsr2l,c
   528   00123E  6ADA               	clrf	fsr2h,c
   529   001240  CFDE F020          	movff	postinc2,??_gpio_port_write_logic
   530   001244  CFDD F021          	movff	postdec2,??_gpio_port_write_logic+1
   531   001248  C020  FFD9         	movff	??_gpio_port_write_logic,fsr2l
   532   00124C  C021  FFDA         	movff	??_gpio_port_write_logic+1,fsr2h
   533   001250  C01F  FFDF         	movff	gpio_port_write_logic@logic,indf2
   534   001254                     l1045:
   535                           
   536                           ;Mcal_Layer/GPIO/hal_gpio.c: 231:     return return_value;
   537   001254  5022               	movf	gpio_port_write_logic@return_value^0,w,c
   538   001256  0012               	return		;funcret
   539   001258                     __end_of_gpio_port_write_logic:
   540                           	callstack 0
   541                           
   542 ;; *************** function _gpio_port_direction_intialize *****************
   543 ;; Defined at:
   544 ;;		line 174 in file "Mcal_Layer/GPIO/hal_gpio.c"
   545 ;; Parameters:    Size  Location     Type
   546 ;;  port            1    wreg     const enum E2834
   547 ;;  direction       1    0[COMRAM] const unsigned char 
   548 ;; Auto vars:     Size  Location     Type
   549 ;;  port            1    4[COMRAM] const enum E2834
   550 ;;  return_value    1    3[COMRAM] unsigned char 
   551 ;; Return value:  Size  Location     Type
   552 ;;                  1    wreg      unsigned char 
   553 ;; Registers used:
   554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   555 ;; Tracked objects:
   556 ;;		On entry : 0/0
   557 ;;		On exit  : 0/0
   558 ;;		Unchanged: 0/0
   559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   560 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   561 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   562 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   563 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   564 ;;Total ram usage:        5 bytes
   565 ;; Hardware stack levels used: 1
   566 ;; This function calls:
   567 ;;		Nothing
   568 ;; This function is called by:
   569 ;;		_main
   570 ;; This function uses a non-reentrant model
   571 ;;
   572                           
   573                           	psect	text2
   574   001258                     __ptext2:
   575                           	callstack 0
   576   001258                     _gpio_port_direction_intialize:
   577                           	callstack 30
   578                           
   579                           ;incstack = 0
   580                           ;gpio_port_direction_intialize@port stored from wreg
   581   001258  6E23               	movwf	gpio_port_direction_intialize@port^0,c
   582   00125A                     
   583                           ;Mcal_Layer/GPIO/hal_gpio.c: 174: Std_ReturnType gpio_port_direction_intialize(const por
      +                          t_index_t port, const uint8 direction);Mcal_Layer/GPIO/hal_gpio.c: 175: {;Mcal_Layer/GPI
      +                          O/hal_gpio.c: 176:     Std_ReturnType return_value = (Std_ReturnType)0x01;
   584   00125A  0E01               	movlw	1
   585   00125C  6E22               	movwf	gpio_port_direction_intialize@return_value^0,c
   586   00125E                     
   587                           ;Mcal_Layer/GPIO/hal_gpio.c: 178:     if(((uint8)5 - 1) < port)
   588   00125E  0E04               	movlw	4
   589   001260  6423               	cpfsgt	gpio_port_direction_intialize@port^0,c
   590   001262  EF35  F009         	goto	u321
   591   001266  EF37  F009         	goto	u320
   592   00126A                     u321:
   593   00126A  EF3B  F009         	goto	l1031
   594   00126E                     u320:
   595   00126E                     
   596                           ;Mcal_Layer/GPIO/hal_gpio.c: 179:     {;Mcal_Layer/GPIO/hal_gpio.c: 180:         return_
      +                          value = (Std_ReturnType)0x00;
   597   00126E  0E00               	movlw	0
   598   001270  6E22               	movwf	gpio_port_direction_intialize@return_value^0,c
   599                           
   600                           ;Mcal_Layer/GPIO/hal_gpio.c: 181:     }
   601   001272  EF4B  F009         	goto	l1033
   602   001276                     l1031:
   603                           
   604                           ;Mcal_Layer/GPIO/hal_gpio.c: 183:     {;Mcal_Layer/GPIO/hal_gpio.c: 184:         *tris_r
      +                          egisters[port] = direction;
   605   001276  5023               	movf	gpio_port_direction_intialize@port^0,w,c
   606   001278  0D02               	mullw	2
   607   00127A  50F3               	movf	243,w,c
   608   00127C  0F15               	addlw	low _tris_registers
   609   00127E  6ED9               	movwf	fsr2l,c
   610   001280  6ADA               	clrf	fsr2h,c
   611   001282  CFDE F020          	movff	postinc2,??_gpio_port_direction_intialize
   612   001286  CFDD F021          	movff	postdec2,??_gpio_port_direction_intialize+1
   613   00128A  C020  FFD9         	movff	??_gpio_port_direction_intialize,fsr2l
   614   00128E  C021  FFDA         	movff	??_gpio_port_direction_intialize+1,fsr2h
   615   001292  C01F  FFDF         	movff	gpio_port_direction_intialize@direction,indf2
   616   001296                     l1033:
   617                           
   618                           ;Mcal_Layer/GPIO/hal_gpio.c: 187:     return return_value;
   619   001296  5022               	movf	gpio_port_direction_intialize@return_value^0,w,c
   620   001298  0012               	return		;funcret
   621   00129A                     __end_of_gpio_port_direction_intialize:
   622                           	callstack 0
   623                           
   624 ;; *************** function _gpio_pin_write_logic *****************
   625 ;; Defined at:
   626 ;;		line 73 in file "Mcal_Layer/GPIO/hal_gpio.c"
   627 ;; Parameters:    Size  Location     Type
   628 ;;  pin_config      1    0[COMRAM] const PTR const struct .
   629 ;;		 -> LEDs(8), 
   630 ;;  logic           1    1[COMRAM] const enum E2816
   631 ;; Auto vars:     Size  Location     Type
   632 ;;  return_value    1    7[COMRAM] unsigned char 
   633 ;; Return value:  Size  Location     Type
   634 ;;                  1    wreg      unsigned char 
   635 ;; Registers used:
   636 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   642 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   643 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   644 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   645 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   646 ;;Total ram usage:        8 bytes
   647 ;; Hardware stack levels used: 1
   648 ;; This function calls:
   649 ;;		Nothing
   650 ;; This function is called by:
   651 ;;		_main
   652 ;;		_gpio_pin_intialize
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           
   656                           	psect	text3
   657   001126                     __ptext3:
   658                           	callstack 0
   659   001126                     _gpio_pin_write_logic:
   660                           	callstack 30
   661   001126                     
   662                           ;Mcal_Layer/GPIO/hal_gpio.c: 73: Std_ReturnType gpio_pin_write_logic(const pin_config_t 
      +                          * const pin_config, const logic_t logic);Mcal_Layer/GPIO/hal_gpio.c: 74: {;Mcal_Layer/GP
      +                          IO/hal_gpio.c: 75:     Std_ReturnType return_value = (Std_ReturnType)0x01;
   663   001126  0E01               	movlw	1
   664   001128  6E26               	movwf	gpio_pin_write_logic@return_value^0,c
   665                           
   666                           ;Mcal_Layer/GPIO/hal_gpio.c: 77:     if(((void*)0) == pin_config)
   667   00112A  501F               	movf	gpio_pin_write_logic@pin_config^0,w,c
   668   00112C  A4D8               	btfss	status,2,c
   669   00112E  EF9B  F008         	goto	u291
   670   001132  EF9D  F008         	goto	u290
   671   001136                     u291:
   672   001136  EFF4  F008         	goto	l1015
   673   00113A                     u290:
   674   00113A                     l1007:
   675                           
   676                           ;Mcal_Layer/GPIO/hal_gpio.c: 78:     {;Mcal_Layer/GPIO/hal_gpio.c: 79:         return_va
      +                          lue = (Std_ReturnType)0x00;
   677   00113A  0E00               	movlw	0
   678   00113C  6E26               	movwf	gpio_pin_write_logic@return_value^0,c
   679                           
   680                           ;Mcal_Layer/GPIO/hal_gpio.c: 80:     }
   681   00113E  EF09  F009         	goto	l1017
   682   001142                     l1009:
   683                           
   684                           ;Mcal_Layer/GPIO/hal_gpio.c: 86:                 (*lat_registers[pin_config->port] &= ~(
      +                          (uint8)1 << pin_config->pin));
   685   001142  501F               	movf	gpio_pin_write_logic@pin_config^0,w,c
   686   001144  6ED9               	movwf	fsr2l,c
   687   001146  6ADA               	clrf	fsr2h,c
   688   001148  30DF               	rrcf	223,w,c
   689   00114A  32E8               	rrcf	wreg,f,c
   690   00114C  32E8               	rrcf	wreg,f,c
   691   00114E  0B07               	andlw	7
   692   001150  6E21               	movwf	??_gpio_pin_write_logic^0,c
   693   001152  0E01               	movlw	1
   694   001154  6E22               	movwf	(??_gpio_pin_write_logic+1)^0,c
   695   001156  2A21               	incf	??_gpio_pin_write_logic^0,f,c
   696   001158  EFB0  F008         	goto	u304
   697   00115C                     u305:
   698   00115C  90D8               	bcf	status,0,c
   699   00115E  3622               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
   700   001160                     u304:
   701   001160  2E21               	decfsz	??_gpio_pin_write_logic^0,f,c
   702   001162  EFAE  F008         	goto	u305
   703   001166  5022               	movf	(??_gpio_pin_write_logic+1)^0,w,c
   704   001168  0AFF               	xorlw	255
   705   00116A  6E23               	movwf	(??_gpio_pin_write_logic+2)^0,c
   706   00116C  501F               	movf	gpio_pin_write_logic@pin_config^0,w,c
   707   00116E  6ED9               	movwf	fsr2l,c
   708   001170  6ADA               	clrf	fsr2h,c
   709   001172  50DF               	movf	223,w,c
   710   001174  0B07               	andlw	7
   711   001176  0D02               	mullw	2
   712   001178  50F3               	movf	243,w,c
   713   00117A  0F0B               	addlw	low _lat_registers
   714   00117C  6ED9               	movwf	fsr2l,c
   715   00117E  6ADA               	clrf	fsr2h,c
   716   001180  CFDE F024          	movff	postinc2,??_gpio_pin_write_logic+3
   717   001184  CFDD F025          	movff	postdec2,??_gpio_pin_write_logic+4
   718   001188  C024  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
   719   00118C  C025  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
   720   001190  5023               	movf	(??_gpio_pin_write_logic+2)^0,w,c
   721   001192  16DF               	andwf	indf2,f,c
   722                           
   723                           ;Mcal_Layer/GPIO/hal_gpio.c: 87:                 break;
   724   001194  EF09  F009         	goto	l1017
   725   001198                     l1011:
   726                           
   727                           ;Mcal_Layer/GPIO/hal_gpio.c: 90:                 (*lat_registers[pin_config->port] |= ((
      +                          uint8)1 << pin_config->pin));
   728   001198  501F               	movf	gpio_pin_write_logic@pin_config^0,w,c
   729   00119A  6ED9               	movwf	fsr2l,c
   730   00119C  6ADA               	clrf	fsr2h,c
   731   00119E  30DF               	rrcf	223,w,c
   732   0011A0  32E8               	rrcf	wreg,f,c
   733   0011A2  32E8               	rrcf	wreg,f,c
   734   0011A4  0B07               	andlw	7
   735   0011A6  6E21               	movwf	??_gpio_pin_write_logic^0,c
   736   0011A8  0E01               	movlw	1
   737   0011AA  6E22               	movwf	(??_gpio_pin_write_logic+1)^0,c
   738   0011AC  2A21               	incf	??_gpio_pin_write_logic^0,f,c
   739   0011AE  EFDB  F008         	goto	u314
   740   0011B2                     u315:
   741   0011B2  90D8               	bcf	status,0,c
   742   0011B4  3622               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
   743   0011B6                     u314:
   744   0011B6  2E21               	decfsz	??_gpio_pin_write_logic^0,f,c
   745   0011B8  EFD9  F008         	goto	u315
   746   0011BC  501F               	movf	gpio_pin_write_logic@pin_config^0,w,c
   747   0011BE  6ED9               	movwf	fsr2l,c
   748   0011C0  6ADA               	clrf	fsr2h,c
   749   0011C2  50DF               	movf	223,w,c
   750   0011C4  0B07               	andlw	7
   751   0011C6  0D02               	mullw	2
   752   0011C8  50F3               	movf	243,w,c
   753   0011CA  0F0B               	addlw	low _lat_registers
   754   0011CC  6ED9               	movwf	fsr2l,c
   755   0011CE  6ADA               	clrf	fsr2h,c
   756   0011D0  CFDE F023          	movff	postinc2,??_gpio_pin_write_logic+2
   757   0011D4  CFDD F024          	movff	postdec2,??_gpio_pin_write_logic+3
   758   0011D8  C023  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
   759   0011DC  C024  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
   760   0011E0  5022               	movf	(??_gpio_pin_write_logic+1)^0,w,c
   761   0011E2  12DF               	iorwf	indf2,f,c
   762                           
   763                           ;Mcal_Layer/GPIO/hal_gpio.c: 91:                 break;
   764   0011E4  EF09  F009         	goto	l1017
   765   0011E8                     l1015:
   766   0011E8  5020               	movf	gpio_pin_write_logic@logic^0,w,c
   767   0011EA  6E21               	movwf	??_gpio_pin_write_logic^0,c
   768   0011EC  6A22               	clrf	(??_gpio_pin_write_logic+1)^0,c
   769                           
   770                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   771                           ; Switch size 1, requested type "simple"
   772                           ; Number of cases is 1, Range of values is 0 to 0
   773                           ; switch strategies available:
   774                           ; Name         Instructions Cycles
   775                           ; simple_byte            4     3 (average)
   776                           ;	Chosen strategy is simple_byte
   777   0011EE  5022               	movf	(??_gpio_pin_write_logic+1)^0,w,c
   778   0011F0  0A00               	xorlw	0	; case 0
   779   0011F2  B4D8               	btfsc	status,2,c
   780   0011F4  EFFE  F008         	goto	l1107
   781   0011F8  EF9D  F008         	goto	l1007
   782   0011FC                     l1107:
   783                           
   784                           ; Switch size 1, requested type "simple"
   785                           ; Number of cases is 2, Range of values is 0 to 1
   786                           ; switch strategies available:
   787                           ; Name         Instructions Cycles
   788                           ; simple_byte            7     4 (average)
   789                           ;	Chosen strategy is simple_byte
   790   0011FC  5021               	movf	??_gpio_pin_write_logic^0,w,c
   791   0011FE  0A00               	xorlw	0	; case 0
   792   001200  B4D8               	btfsc	status,2,c
   793   001202  EFA1  F008         	goto	l1009
   794   001206  0A01               	xorlw	1	; case 1
   795   001208  B4D8               	btfsc	status,2,c
   796   00120A  EFCC  F008         	goto	l1011
   797   00120E  EF9D  F008         	goto	l1007
   798   001212                     l1017:
   799                           
   800                           ;Mcal_Layer/GPIO/hal_gpio.c: 98:     return return_value;
   801   001212  5026               	movf	gpio_pin_write_logic@return_value^0,w,c
   802   001214  0012               	return		;funcret
   803   001216                     __end_of_gpio_pin_write_logic:
   804                           	callstack 0
   805                           
   806                           	psect	smallconst
   807   001000                     __psmallconst:
   808                           	callstack 0
   809   001000  00                 	db	0
   810   001001  00                 	db	0	; dummy byte at the end
   811   000000                     
   812                           	psect	rparam
   813   000000                     
   814                           	psect	config
   815                           
   816                           ; Padding undefined space
   817   300000                     	org	3145728
   818   300000  FF                 	db	255
   819                           
   820                           ;Config register CONFIG1H @ 0x300001
   821                           ;	Oscillator Selection bits
   822                           ;	OSC = HS, HS oscillator
   823                           ;	Fail-Safe Clock Monitor Enable bit
   824                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   825                           ;	Internal/External Oscillator Switchover bit
   826                           ;	IESO = OFF, Oscillator Switchover mode disabled
   827   300001                     	org	3145729
   828   300001  02                 	db	2
   829                           
   830                           ;Config register CONFIG2L @ 0x300002
   831                           ;	Power-up Timer Enable bit
   832                           ;	PWRT = OFF, PWRT disabled
   833                           ;	Brown-out Reset Enable bits
   834                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
   835                           ;	Brown Out Reset Voltage bits
   836                           ;	BORV = 1, 
   837   300002                     	org	3145730
   838   300002  09                 	db	9
   839                           
   840                           ;Config register CONFIG2H @ 0x300003
   841                           ;	Watchdog Timer Enable bit
   842                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   843                           ;	Watchdog Timer Postscale Select bits
   844                           ;	WDTPS = 32768, 1:32768
   845   300003                     	org	3145731
   846   300003  1E                 	db	30
   847                           
   848                           ; Padding undefined space
   849   300004                     	org	3145732
   850   300004  FF                 	db	255
   851                           
   852                           ;Config register CONFIG3H @ 0x300005
   853                           ;	CCP2 MUX bit
   854                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   855                           ;	PORTB A/D Enable bit
   856                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   857                           ;	Low-Power Timer1 Oscillator Enable bit
   858                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   859                           ;	MCLR Pin Enable bit
   860                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   861   300005                     	org	3145733
   862   300005  81                 	db	129
   863                           
   864                           ;Config register CONFIG4L @ 0x300006
   865                           ;	Stack Full/Underflow Reset Enable bit
   866                           ;	STVREN = ON, Stack full/underflow will cause Reset
   867                           ;	Single-Supply ICSP Enable bit
   868                           ;	LVP = OFF, Single-Supply ICSP disabled
   869                           ;	Extended Instruction Set Enable bit
   870                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   871                           ;	Background Debugger Enable bit
   872                           ;	DEBUG = 0x1, unprogrammed default
   873   300006                     	org	3145734
   874   300006  81                 	db	129
   875                           
   876                           ; Padding undefined space
   877   300007                     	org	3145735
   878   300007  FF                 	db	255
   879                           
   880                           ;Config register CONFIG5L @ 0x300008
   881                           ;	Code Protection bit
   882                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
   883                           ;	Code Protection bit
   884                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
   885                           ;	Code Protection bit
   886                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
   887                           ;	Code Protection bit
   888                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
   889   300008                     	org	3145736
   890   300008  0F                 	db	15
   891                           
   892                           ;Config register CONFIG5H @ 0x300009
   893                           ;	Boot Block Code Protection bit
   894                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
   895                           ;	Data EEPROM Code Protection bit
   896                           ;	CPD = OFF, Data EEPROM not code-protected
   897   300009                     	org	3145737
   898   300009  C0                 	db	192
   899                           
   900                           ;Config register CONFIG6L @ 0x30000A
   901                           ;	Write Protection bit
   902                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
   903                           ;	Write Protection bit
   904                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
   905                           ;	Write Protection bit
   906                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
   907                           ;	Write Protection bit
   908                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
   909   30000A                     	org	3145738
   910   30000A  0F                 	db	15
   911                           
   912                           ;Config register CONFIG6H @ 0x30000B
   913                           ;	Configuration Register Write Protection bit
   914                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
   915                           ;	Boot Block Write Protection bit
   916                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
   917                           ;	Data EEPROM Write Protection bit
   918                           ;	WRTD = OFF, Data EEPROM not write-protected
   919   30000B                     	org	3145739
   920   30000B  E0                 	db	224
   921                           
   922                           ;Config register CONFIG7L @ 0x30000C
   923                           ;	Table Read Protection bit
   924                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
   925                           ;	Table Read Protection bit
   926                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
   927                           ;	Table Read Protection bit
   928                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
   929                           ;	Table Read Protection bit
   930                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
   931   30000C                     	org	3145740
   932   30000C  0F                 	db	15
   933                           
   934                           ;Config register CONFIG7H @ 0x30000D
   935                           ;	Boot Block Table Read Protection bit
   936                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
   937   30000D                     	org	3145741
   938   30000D  40                 	db	64
   939                           tosu	equ	0xFFF
   940                           tosh	equ	0xFFE
   941                           tosl	equ	0xFFD
   942                           stkptr	equ	0xFFC
   943                           pclatu	equ	0xFFB
   944                           pclath	equ	0xFFA
   945                           pcl	equ	0xFF9
   946                           tblptru	equ	0xFF8
   947                           tblptrh	equ	0xFF7
   948                           tblptrl	equ	0xFF6
   949                           tablat	equ	0xFF5
   950                           prodh	equ	0xFF4
   951                           prodl	equ	0xFF3
   952                           indf0	equ	0xFEF
   953                           postinc0	equ	0xFEE
   954                           postdec0	equ	0xFED
   955                           preinc0	equ	0xFEC
   956                           plusw0	equ	0xFEB
   957                           fsr0h	equ	0xFEA
   958                           fsr0l	equ	0xFE9
   959                           wreg	equ	0xFE8
   960                           indf1	equ	0xFE7
   961                           postinc1	equ	0xFE6
   962                           postdec1	equ	0xFE5
   963                           preinc1	equ	0xFE4
   964                           plusw1	equ	0xFE3
   965                           fsr1h	equ	0xFE2
   966                           fsr1l	equ	0xFE1
   967                           bsr	equ	0xFE0
   968                           indf2	equ	0xFDF
   969                           postinc2	equ	0xFDE
   970                           postdec2	equ	0xFDD
   971                           preinc2	equ	0xFDC
   972                           plusw2	equ	0xFDB
   973                           fsr2h	equ	0xFDA
   974                           fsr2l	equ	0xFD9
   975                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        30
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     13      52
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    gpio_pin_write_logic@pin_config	const PTR const struct . size(1) Largest target is 8
		 -> LEDs(COMRAM[8]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    _main->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1585
                                              8 COMRAM     5     5      0
               _gpio_pin_write_logic
      _gpio_port_direction_intialize
              _gpio_port_write_logic
 ---------------------------------------------------------------------------------
 (1) _gpio_port_write_logic                                5     4      1     166
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (1) _gpio_port_direction_intialize                        5     4      1     166
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (1) _gpio_pin_write_logic                                 8     6      2     917
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _gpio_pin_write_logic
   _gpio_port_direction_intialize
   _gpio_port_write_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      D      34       1       40.9%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      34      39        0.0%
DATA                 0      0      34       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Jun 27 13:58:48 2024

                                       l65 1214                                         l87 1298  
                                       l99 1256                                        u304 1160  
                                      u320 126E                                        u305 115C  
                                      u321 126A                                        u314 11B6  
                                      u330 122C                                        u315 11B2  
                                      u331 1228                                        u350 1058  
                                      u407 1100                                        u351 1054  
                                      u360 10D2                                        u361 10CE  
                                      u290 113A                                        u370 111E  
                                      u291 1136                                        u371 111A  
                                      u387 107A                                        u397 10B6  
                                      wreg 0FE8                                       l1011 1198  
                                     l1005 1126                                       l1101 110E  
                                     l1007 113A                                       l1015 11E8  
                                     l1031 1276                                       l1009 1142  
                                     l1017 1212                                       l1033 1296  
                                     l1025 125A                                       l1041 122C  
                                     l1107 11FC                                       l1027 125E  
                                     l1043 1234                                       l1029 126E  
                                     l1045 1254                                       l1037 1218  
                                     l1039 121C                                       l1071 1058  
                                     l1081 108C                                       l1073 1070  
                                     l1065 1006                                       l1083 10AC  
                                     l1075 1088                                       l1067 1046  
                                     l1059 1002                                       l1085 10C2  
                                     l1069 1048                                       l1095 10D6  
                                     l1087 10C4                                       l1097 10F6  
                                     l1089 10D2                                       l1099 110C  
                                     _LATA 0F89                                       _LATB 0F8A  
                                     _LATC 0F8B                                       _LATD 0F8C  
                                     _LATE 0F8D                                       _LEDs 002D  
                                     _main 1002                                       fsr2h 0FDA  
                                     indf2 0FDF                                       fsr1l 0FE1  
                                     fsr2l 0FD9                                       prodl 0FF3  
                                     start 0000                               ___param_bank 0000  
gpio_port_direction_intialize@return_value 0022                      _gpio_port_write_logic 1216  
                     _gpio_pin_write_logic 1126                                      ?_main 001F  
                                    _PORTA 0F80                                      _PORTB 0F81  
                                    _PORTC 0F82                                      _PORTD 0F83  
                                    _PORTE 0F84                                      _TRISA 0F92  
                                    _TRISB 0F93                                      _TRISC 0F94  
                                    _TRISD 0F95                                      _TRISE 0F96  
                                    tablat 0FF5                                      status 0FD8  
   gpio_port_direction_intialize@direction 001F                            __initialization 129A  
                             __end_of_main 1126                      ?_gpio_pin_write_logic 001F  
                            _lat_registers 000B                                     ??_main 0027  
                            __activetblptr 0002             ?_gpio_port_direction_intialize 001F  
                            main@index_187 0029                              main@index_188 002A  
                gpio_port_write_logic@port 0023                     ?_gpio_port_write_logic 001F  
                                   clear_0 12C0                                     isa$std 0001  
                             __pdataCOMRAM 0001                               __mediumconst 0000  
                                   tblptrh 0FF7                                     tblptrl 0FF6  
                                   tblptru 0FF8                                 __accesstop 0080  
                  __end_of__initialization 12C6                              ___rparam_used 0001  
                   ??_gpio_pin_write_logic 0021                             __pcstackCOMRAM 001F  
        gpio_port_write_logic@return_value 0022                             _tris_registers 0015  
                                  __Hparam 0000                                    __Lparam 0000  
                             __psmallconst 1000                                    __pcinit 129A  
                                  __ramtop 1000                                    __ptext0 1002  
                                  __ptext1 1216                                    __ptext2 1258  
                                  __ptext3 1126                                    _ret_val 002C  
                     end_of_initialization 12C6                              __Lmediumconst 0000  
          ??_gpio_port_direction_intialize 0020                    ??_gpio_port_write_logic 0020  
                                  postdec1 0FE5                                    postdec2 0FDD  
                                  postinc0 0FEE                                    postinc2 0FDE  
                            __pidataCOMRAM 12D0           gpio_pin_write_logic@return_value 0026  
                      start_initialization 129A      __end_of_gpio_port_direction_intialize 129A  
            _gpio_port_direction_intialize 1258          gpio_port_direction_intialize@port 0023  
                              __pbssCOMRAM 002C             gpio_pin_write_logic@pin_config 001F  
                gpio_pin_write_logic@logic 0020                                __smallconst 1000  
            __end_of_gpio_port_write_logic 1258                                  main@index 002B  
                                copy_data0 12AE                                   __Hrparam 0000  
                                 __Lrparam 0000                                   isa$xinst 0000  
             __end_of_gpio_pin_write_logic 1216                             _port_registers 0001  
               gpio_port_write_logic@logic 001F  
