

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Jun 28 20:50:54 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21   000000                     
    22                           ; Generated 17/10/2023 GMT
    23                           ; 
    24                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F4620 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56   000000                     
    57                           	psect	idataCOMRAM
    58   00145C                     __pidataCOMRAM:
    59                           	callstack 0
    60                           
    61                           ;initializer for _port_registers
    62   00145C  80                 	db	128
    63   00145D  0F                 	db	15
    64   00145E  81                 	db	129
    65   00145F  0F                 	db	15
    66   001460  82                 	db	130
    67   001461  0F                 	db	15
    68   001462  83                 	db	131
    69   001463  0F                 	db	15
    70   001464  84                 	db	132
    71   001465  0F                 	db	15
    72                           
    73                           ;initializer for _lat_registers
    74   001466  89                 	db	137
    75   001467  0F                 	db	15
    76   001468  8A                 	db	138
    77   001469  0F                 	db	15
    78   00146A  8B                 	db	139
    79   00146B  0F                 	db	15
    80   00146C  8C                 	db	140
    81   00146D  0F                 	db	15
    82   00146E  8D                 	db	141
    83   00146F  0F                 	db	15
    84                           
    85                           ;initializer for _tris_registers
    86   001470  92                 	db	146
    87   001471  0F                 	db	15
    88   001472  93                 	db	147
    89   001473  0F                 	db	15
    90   001474  94                 	db	148
    91   001475  0F                 	db	15
    92   001476  95                 	db	149
    93   001477  0F                 	db	15
    94   001478  96                 	db	150
    95   001479  0F                 	db	15
    96                           
    97                           ;initializer for _ret_val
    98   00147A  01                 	db	1
    99   000000                     _PORTE	set	3972
   100   000000                     _PORTD	set	3971
   101   000000                     _PORTC	set	3970
   102   000000                     _PORTB	set	3969
   103   000000                     _PORTA	set	3968
   104   000000                     _LATA	set	3977
   105   000000                     _TRISA	set	3986
   106   000000                     _TRISE	set	3990
   107   000000                     _TRISD	set	3989
   108   000000                     _TRISC	set	3988
   109   000000                     _TRISB	set	3987
   110   000000                     _LATE	set	3981
   111   000000                     _LATD	set	3980
   112   000000                     _LATC	set	3979
   113   000000                     _LATB	set	3978
   114                           
   115                           ; #config settings
   116                           
   117                           	psect	cinit
   118   001426                     __pcinit:
   119                           	callstack 0
   120   001426                     start_initialization:
   121                           	callstack 0
   122   001426                     __initialization:
   123                           	callstack 0
   124                           
   125                           ; Initialize objects allocated to COMRAM (31 bytes)
   126                           ; load TBLPTR registers with __pidataCOMRAM
   127   001426  0E5C               	movlw	low __pidataCOMRAM
   128   001428  6EF6               	movwf	tblptrl,c
   129   00142A  0E14               	movlw	high __pidataCOMRAM
   130   00142C  6EF7               	movwf	tblptrh,c
   131   00142E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   132   001430  6EF8               	movwf	tblptru,c
   133   001432  EE00  F001         	lfsr	0,__pdataCOMRAM
   134   001436  EE10 F01F          	lfsr	1,31
   135   00143A                     copy_data0:
   136   00143A  0009               	tblrd		*+
   137   00143C  CFF5 FFEE          	movff	tablat,postinc0
   138   001440  50E5               	movf	postdec1,w,c
   139   001442  50E1               	movf	fsr1l,w,c
   140   001444  E1FA               	bnz	copy_data0
   141                           
   142                           ; Clear objects allocated to COMRAM (8 bytes)
   143   001446  EE00  F030         	lfsr	0,__pbssCOMRAM
   144   00144A  0E08               	movlw	8
   145   00144C                     clear_0:
   146   00144C  6AEE               	clrf	postinc0,c
   147   00144E  06E8               	decf	wreg,f,c
   148   001450  E1FD               	bnz	clear_0
   149   001452                     end_of_initialization:
   150                           	callstack 0
   151   001452                     __end_of__initialization:
   152                           	callstack 0
   153   001452  0E00               	movlw	low (__Lmediumconst shr (0+16))
   154   001454  6EF8               	movwf	tblptru,c
   155   001456  0100               	movlb	0
   156   001458  EF10  F009         	goto	_main	;jump to C main() function
   157                           
   158                           	psect	bssCOMRAM
   159   000030                     __pbssCOMRAM:
   160                           	callstack 0
   161   000030                     _LEDs:
   162                           	callstack 0
   163   000030                     	ds	8
   164                           
   165                           	psect	dataCOMRAM
   166   000001                     __pdataCOMRAM:
   167                           	callstack 0
   168   000001                     _port_registers:
   169                           	callstack 0
   170   000001                     	ds	10
   171   00000B                     _lat_registers:
   172                           	callstack 0
   173   00000B                     	ds	10
   174   000015                     _tris_registers:
   175                           	callstack 0
   176   000015                     	ds	10
   177   00001F                     _ret_val:
   178                           	callstack 0
   179   00001F                     	ds	1
   180                           
   181                           	psect	cstackCOMRAM
   182   000020                     __pcstackCOMRAM:
   183                           	callstack 0
   184   000020                     gpio_pin_direction_intialize@pin_config:
   185                           	callstack 0
   186   000020                     gpio_pin_write_logic@pin_config:
   187                           	callstack 0
   188   000020                     gpio_pin_toggle_logic@pin_config:
   189                           	callstack 0
   190                           
   191                           ; 1 bytes @ 0x0
   192   000020                     	ds	1
   193   000021                     ??_gpio_pin_toggle_logic:
   194   000021                     ??_gpio_pin_direction_intialize:
   195   000021                     gpio_pin_write_logic@logic:
   196                           	callstack 0
   197                           
   198                           ; 1 bytes @ 0x1
   199   000021                     	ds	1
   200   000022                     ??_gpio_pin_write_logic:
   201                           
   202                           ; 1 bytes @ 0x2
   203   000022                     	ds	3
   204   000025                     gpio_pin_toggle_logic@return_value:
   205                           	callstack 0
   206                           
   207                           ; 1 bytes @ 0x5
   208   000025                     	ds	1
   209   000026                     led_toggle@led:
   210                           	callstack 0
   211   000026                     gpio_pin_direction_intialize@return_value:
   212                           	callstack 0
   213                           
   214                           ; 1 bytes @ 0x6
   215   000026                     	ds	1
   216   000027                     ??_led_toggle:
   217   000027                     gpio_pin_write_logic@return_value:
   218                           	callstack 0
   219                           
   220                           ; 1 bytes @ 0x7
   221   000027                     	ds	1
   222   000028                     led_toggle@return_value:
   223                           	callstack 0
   224   000028                     gpio_pin_intialize@pin_config:
   225                           	callstack 0
   226                           
   227                           ; 1 bytes @ 0x8
   228   000028                     	ds	1
   229   000029                     gpio_pin_intialize@return_value:
   230                           	callstack 0
   231                           
   232                           ; 1 bytes @ 0x9
   233   000029                     	ds	1
   234   00002A                     led_initialize@led:
   235                           	callstack 0
   236                           
   237                           ; 1 bytes @ 0xA
   238   00002A                     	ds	1
   239   00002B                     ??_led_initialize:
   240                           
   241                           ; 1 bytes @ 0xB
   242   00002B                     	ds	1
   243   00002C                     ??_main:
   244                           
   245                           ; 1 bytes @ 0xC
   246   00002C                     	ds	2
   247   00002E                     main@index_256:
   248                           	callstack 0
   249                           
   250                           ; 1 bytes @ 0xE
   251   00002E                     	ds	1
   252   00002F                     main@index:
   253                           	callstack 0
   254                           
   255                           ; 1 bytes @ 0xF
   256   00002F                     	ds	1
   257                           
   258 ;;
   259 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   260 ;;
   261 ;; *************** function _main *****************
   262 ;; Defined at:
   263 ;;		line 15 in file "Application.c"
   264 ;; Parameters:    Size  Location     Type
   265 ;;		None
   266 ;; Auto vars:     Size  Location     Type
   267 ;;  index           1   14[COMRAM] unsigned char 
   268 ;;  index           1   15[COMRAM] unsigned char 
   269 ;; Return value:  Size  Location     Type
   270 ;;                  2  159[None  ] int 
   271 ;; Registers used:
   272 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   273 ;; Tracked objects:
   274 ;;		On entry : 0/0
   275 ;;		On exit  : 0/0
   276 ;;		Unchanged: 0/0
   277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   279 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   280 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   281 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   282 ;;Total ram usage:        4 bytes
   283 ;; Hardware stack levels required when called: 3
   284 ;; This function calls:
   285 ;;		_led_initialize
   286 ;;		_led_toggle
   287 ;; This function is called by:
   288 ;;		Startup code after reset
   289 ;; This function uses a non-reentrant model
   290 ;;
   291                           
   292                           	psect	text0
   293   001220                     __ptext0:
   294                           	callstack 0
   295   001220                     _main:
   296                           	callstack 28
   297   001220                     
   298                           ;Application.c: 17:     for(uint8 index = 0; index < 8; index++)
   299   001220  0E00               	movlw	0
   300   001222  6E2F               	movwf	main@index^0,c
   301   001224                     l1187:
   302                           
   303                           ;Application.c: 18:     {;Application.c: 19:         LEDs[index].direction = OUTPUT;
   304   001224  502F               	movf	main@index^0,w,c
   305   001226  0F30               	addlw	low _LEDs
   306   001228  6ED9               	movwf	fsr2l,c
   307   00122A  6ADA               	clrf	fsr2h,c
   308   00122C  9CDF               	bcf	indf2,6,c
   309                           
   310                           ;Application.c: 20:         LEDs[index].logic = LOW;
   311   00122E  502F               	movf	main@index^0,w,c
   312   001230  0F30               	addlw	low _LEDs
   313   001232  6ED9               	movwf	fsr2l,c
   314   001234  6ADA               	clrf	fsr2h,c
   315   001236  9EDF               	bcf	indf2,7,c
   316                           
   317                           ;Application.c: 21:         LEDs[index].pin = index;
   318   001238  C02F  F02C         	movff	main@index,??_main
   319   00123C  502F               	movf	main@index^0,w,c
   320   00123E  0F30               	addlw	low _LEDs
   321   001240  6ED9               	movwf	fsr2l,c
   322   001242  6ADA               	clrf	fsr2h,c
   323   001244  462C               	rlncf	??_main^0,f,c
   324   001246  462C               	rlncf	??_main^0,f,c
   325   001248  462C               	rlncf	??_main^0,f,c
   326   00124A  50DF               	movf	223,w,c
   327   00124C  182C               	xorwf	??_main^0,w,c
   328   00124E  0BC7               	andlw	-57
   329   001250  182C               	xorwf	??_main^0,w,c
   330   001252  6EDF               	movwf	223,c
   331                           
   332                           ;Application.c: 22:         LEDs[index].port = PORTC_INDEX;
   333   001254  502F               	movf	main@index^0,w,c
   334   001256  0F30               	addlw	low _LEDs
   335   001258  6ED9               	movwf	fsr2l,c
   336   00125A  6ADA               	clrf	fsr2h,c
   337   00125C  50DF               	movf	223,w,c
   338   00125E  0BF8               	andlw	-8
   339   001260  0902               	iorlw	2
   340   001262  6EDF               	movwf	223,c
   341   001264                     
   342                           ;Application.c: 24:         led_initialize(&LEDs[index]);
   343   001264  502F               	movf	main@index^0,w,c
   344   001266  0F30               	addlw	low _LEDs
   345   001268  6E2A               	movwf	led_initialize@led^0,c
   346   00126A  ECC7  F009         	call	_led_initialize	;wreg free
   347   00126E                     
   348                           ;Application.c: 25:     }
   349   00126E  2A2F               	incf	main@index^0,f,c
   350   001270  0E07               	movlw	7
   351   001272  642F               	cpfsgt	main@index^0,c
   352   001274  EF3E  F009         	goto	u641
   353   001278  EF40  F009         	goto	u640
   354   00127C                     u641:
   355   00127C  EF12  F009         	goto	l1187
   356   001280                     u640:
   357   001280                     l1195:
   358                           
   359                           ;Application.c: 28:     {;Application.c: 29:         for(uint8 index = 0; index < 8; ind
      +                          ex++)
   360   001280  0E00               	movlw	0
   361   001282  6E2E               	movwf	main@index_256^0,c
   362   001284                     l1201:
   363                           
   364                           ;Application.c: 30:         {;Application.c: 31:             ret_val = led_toggle(&LEDs[
      +                          index]);
   365   001284  502E               	movf	main@index_256^0,w,c
   366   001286  0F30               	addlw	low _LEDs
   367   001288  6E26               	movwf	led_toggle@led^0,c
   368   00128A  EC96  F009         	call	_led_toggle	;wreg free
   369   00128E  6E1F               	movwf	_ret_val^0,c
   370   001290                     
   371                           ;Application.c: 32:             _delay((unsigned long)((250)*((uint32)4000000/4000.0)));
   372   001290  0E02               	movlw	2
   373   001292  6E2D               	movwf	(??_main+1)^0,c
   374   001294  0E45               	movlw	69
   375   001296  6E2C               	movwf	??_main^0,c
   376   001298  0EAA               	movlw	170
   377   00129A                     u667:
   378   00129A  2EE8               	decfsz	wreg,f,c
   379   00129C  D7FE               	bra	u667
   380   00129E  2E2C               	decfsz	??_main^0,f,c
   381   0012A0  D7FC               	bra	u667
   382   0012A2  2E2D               	decfsz	(??_main+1)^0,f,c
   383   0012A4  D7FA               	bra	u667
   384   0012A6                     
   385                           ;Application.c: 33:         }
   386   0012A6  2A2E               	incf	main@index_256^0,f,c
   387   0012A8  0E07               	movlw	7
   388   0012AA  642E               	cpfsgt	main@index_256^0,c
   389   0012AC  EF5A  F009         	goto	u651
   390   0012B0  EF5C  F009         	goto	u650
   391   0012B4                     u651:
   392   0012B4  EF42  F009         	goto	l1201
   393   0012B8                     u650:
   394   0012B8  EF40  F009         	goto	l1195
   395   0012BC  EF00  F000         	goto	start
   396   0012C0                     __end_of_main:
   397                           	callstack 0
   398                           
   399 ;; *************** function _led_toggle *****************
   400 ;; Defined at:
   401 ;;		line 86 in file "Ecu_Layer/LED/ecu_led.c"
   402 ;; Parameters:    Size  Location     Type
   403 ;;  led             1    6[COMRAM] const PTR const struct .
   404 ;;		 -> LEDs(8), 
   405 ;; Auto vars:     Size  Location     Type
   406 ;;  return_value    1    8[COMRAM] unsigned char 
   407 ;; Return value:  Size  Location     Type
   408 ;;                  1    wreg      unsigned char 
   409 ;; Registers used:
   410 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   411 ;; Tracked objects:
   412 ;;		On entry : 0/0
   413 ;;		On exit  : 0/0
   414 ;;		Unchanged: 0/0
   415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   416 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   417 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   418 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   419 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   420 ;;Total ram usage:        3 bytes
   421 ;; Hardware stack levels used: 1
   422 ;; Hardware stack levels required when called: 1
   423 ;; This function calls:
   424 ;;		_gpio_pin_toggle_logic
   425 ;; This function is called by:
   426 ;;		_main
   427 ;; This function uses a non-reentrant model
   428 ;;
   429                           
   430                           	psect	text1
   431   00132C                     __ptext1:
   432                           	callstack 0
   433   00132C                     _led_toggle:
   434                           	callstack 29
   435   00132C                     
   436                           ;Ecu_Layer/LED/ecu_led.c: 90:     if((((void*)0) == led) || (((uint8)5 - 1) < led->port)
      +                           || (((uint8)8 - 1) < led->pin))
   437   00132C  5026               	movf	led_toggle@led^0,w,c
   438   00132E  B4D8               	btfsc	status,2,c
   439   001330  EF9C  F009         	goto	u551
   440   001334  EF9E  F009         	goto	u550
   441   001338                     u551:
   442   001338  EFBC  F009         	goto	l1145
   443   00133C                     u550:
   444   00133C  5026               	movf	led_toggle@led^0,w,c
   445   00133E  6ED9               	movwf	fsr2l,c
   446   001340  6ADA               	clrf	fsr2h,c
   447   001342  50DF               	movf	223,w,c
   448   001344  0B07               	andlw	7
   449   001346  6E27               	movwf	??_led_toggle^0,c
   450   001348  0E05               	movlw	5
   451   00134A  6027               	cpfslt	??_led_toggle^0,c
   452   00134C  EFAA  F009         	goto	u561
   453   001350  EFAC  F009         	goto	u560
   454   001354                     u561:
   455   001354  EFBC  F009         	goto	l1145
   456   001358                     u560:
   457   001358  5026               	movf	led_toggle@led^0,w,c
   458   00135A  6ED9               	movwf	fsr2l,c
   459   00135C  6ADA               	clrf	fsr2h,c
   460   00135E  30DF               	rrcf	223,w,c
   461   001360  32E8               	rrcf	wreg,f,c
   462   001362  32E8               	rrcf	wreg,f,c
   463   001364  0B07               	andlw	7
   464   001366  6E27               	movwf	??_led_toggle^0,c
   465   001368  0E07               	movlw	7
   466   00136A  6427               	cpfsgt	??_led_toggle^0,c
   467   00136C  EFBA  F009         	goto	u571
   468   001370  EFBC  F009         	goto	u570
   469   001374                     u571:
   470   001374  EFC0  F009         	goto	l1147
   471   001378                     u570:
   472   001378                     l1145:
   473                           
   474                           ;Ecu_Layer/LED/ecu_led.c: 91:     {;Ecu_Layer/LED/ecu_led.c: 92:         return_value = 
      +                          (Std_ReturnType)0x00;
   475   001378  0E00               	movlw	0
   476   00137A  6E28               	movwf	led_toggle@return_value^0,c
   477                           
   478                           ;Ecu_Layer/LED/ecu_led.c: 93:     }
   479   00137C  EFC5  F009         	goto	l1149
   480   001380                     l1147:
   481                           
   482                           ;Ecu_Layer/LED/ecu_led.c: 95:     {;Ecu_Layer/LED/ecu_led.c: 96:         return_value = 
      +                          gpio_pin_toggle_logic(led);
   483   001380  C026  F020         	movff	led_toggle@led,gpio_pin_toggle_logic@pin_config
   484   001384  EC60  F009         	call	_gpio_pin_toggle_logic	;wreg free
   485   001388  6E28               	movwf	led_toggle@return_value^0,c
   486   00138A                     l1149:
   487                           
   488                           ;Ecu_Layer/LED/ecu_led.c: 99:     return return_value;
   489   00138A  5028               	movf	led_toggle@return_value^0,w,c
   490   00138C  0012               	return		;funcret
   491   00138E                     __end_of_led_toggle:
   492                           	callstack 0
   493                           
   494 ;; *************** function _gpio_pin_toggle_logic *****************
   495 ;; Defined at:
   496 ;;		line 128 in file "Mcal_Layer/GPIO/hal_gpio.c"
   497 ;; Parameters:    Size  Location     Type
   498 ;;  pin_config      1    0[COMRAM] const PTR const struct .
   499 ;;		 -> LEDs(8), 
   500 ;; Auto vars:     Size  Location     Type
   501 ;;  return_value    1    5[COMRAM] unsigned char 
   502 ;; Return value:  Size  Location     Type
   503 ;;                  1    wreg      unsigned char 
   504 ;; Registers used:
   505 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   506 ;; Tracked objects:
   507 ;;		On entry : 0/0
   508 ;;		On exit  : 0/0
   509 ;;		Unchanged: 0/0
   510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   511 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   512 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   513 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   514 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   515 ;;Total ram usage:        6 bytes
   516 ;; Hardware stack levels used: 1
   517 ;; This function calls:
   518 ;;		Nothing
   519 ;; This function is called by:
   520 ;;		_led_toggle
   521 ;; This function uses a non-reentrant model
   522 ;;
   523                           
   524                           	psect	text2
   525   0012C0                     __ptext2:
   526                           	callstack 0
   527   0012C0                     _gpio_pin_toggle_logic:
   528                           	callstack 29
   529   0012C0                     
   530                           ;Mcal_Layer/GPIO/hal_gpio.c: 128: Std_ReturnType gpio_pin_toggle_logic(const pin_config_
      +                          t * const pin_config);Mcal_Layer/GPIO/hal_gpio.c: 129: {;Mcal_Layer/GPIO/hal_gpio.c: 130
      +                          :     Std_ReturnType return_value = (Std_ReturnType)0x01;
   531   0012C0  0E01               	movlw	1
   532   0012C2  6E25               	movwf	gpio_pin_toggle_logic@return_value^0,c
   533                           
   534                           ;Mcal_Layer/GPIO/hal_gpio.c: 132:     if(((void*)0) == pin_config)
   535   0012C4  5020               	movf	gpio_pin_toggle_logic@pin_config^0,w,c
   536   0012C6  A4D8               	btfss	status,2,c
   537   0012C8  EF68  F009         	goto	u501
   538   0012CC  EF6A  F009         	goto	u500
   539   0012D0                     u501:
   540   0012D0  EF6E  F009         	goto	l1121
   541   0012D4                     u500:
   542   0012D4                     
   543                           ;Mcal_Layer/GPIO/hal_gpio.c: 133:     {;Mcal_Layer/GPIO/hal_gpio.c: 134:         return_
      +                          value = (Std_ReturnType)0x00;
   544   0012D4  0E00               	movlw	0
   545   0012D6  6E25               	movwf	gpio_pin_toggle_logic@return_value^0,c
   546                           
   547                           ;Mcal_Layer/GPIO/hal_gpio.c: 135:     }
   548   0012D8  EF94  F009         	goto	l1123
   549   0012DC                     l1121:
   550                           
   551                           ;Mcal_Layer/GPIO/hal_gpio.c: 137:     {;Mcal_Layer/GPIO/hal_gpio.c: 138:         (*lat_r
      +                          egisters[pin_config->port] ^= ((uint8)1 << pin_config->pin));
   552   0012DC  5020               	movf	gpio_pin_toggle_logic@pin_config^0,w,c
   553   0012DE  6ED9               	movwf	fsr2l,c
   554   0012E0  6ADA               	clrf	fsr2h,c
   555   0012E2  30DF               	rrcf	223,w,c
   556   0012E4  32E8               	rrcf	wreg,f,c
   557   0012E6  32E8               	rrcf	wreg,f,c
   558   0012E8  0B07               	andlw	7
   559   0012EA  6E21               	movwf	??_gpio_pin_toggle_logic^0,c
   560   0012EC  0E01               	movlw	1
   561   0012EE  6E22               	movwf	(??_gpio_pin_toggle_logic+1)^0,c
   562   0012F0  2A21               	incf	??_gpio_pin_toggle_logic^0,f,c
   563   0012F2  EF7D  F009         	goto	u514
   564   0012F6                     u515:
   565   0012F6  90D8               	bcf	status,0,c
   566   0012F8  3622               	rlcf	(??_gpio_pin_toggle_logic+1)^0,f,c
   567   0012FA                     u514:
   568   0012FA  2E21               	decfsz	??_gpio_pin_toggle_logic^0,f,c
   569   0012FC  EF7B  F009         	goto	u515
   570   001300  5020               	movf	gpio_pin_toggle_logic@pin_config^0,w,c
   571   001302  6ED9               	movwf	fsr2l,c
   572   001304  6ADA               	clrf	fsr2h,c
   573   001306  50DF               	movf	223,w,c
   574   001308  0B07               	andlw	7
   575   00130A  0D02               	mullw	2
   576   00130C  50F3               	movf	243,w,c
   577   00130E  0F0B               	addlw	low _lat_registers
   578   001310  6ED9               	movwf	fsr2l,c
   579   001312  6ADA               	clrf	fsr2h,c
   580   001314  CFDE F023          	movff	postinc2,??_gpio_pin_toggle_logic+2
   581   001318  CFDD F024          	movff	postdec2,??_gpio_pin_toggle_logic+3
   582   00131C  C023  FFD9         	movff	??_gpio_pin_toggle_logic+2,fsr2l
   583   001320  C024  FFDA         	movff	??_gpio_pin_toggle_logic+3,fsr2h
   584   001324  5022               	movf	(??_gpio_pin_toggle_logic+1)^0,w,c
   585   001326  1ADF               	xorwf	indf2,f,c
   586   001328                     l1123:
   587                           
   588                           ;Mcal_Layer/GPIO/hal_gpio.c: 141:     return return_value;
   589   001328  5025               	movf	gpio_pin_toggle_logic@return_value^0,w,c
   590   00132A  0012               	return		;funcret
   591   00132C                     __end_of_gpio_pin_toggle_logic:
   592                           	callstack 0
   593                           
   594 ;; *************** function _led_initialize *****************
   595 ;; Defined at:
   596 ;;		line 17 in file "Ecu_Layer/LED/ecu_led.c"
   597 ;; Parameters:    Size  Location     Type
   598 ;;  led             1   10[COMRAM] const PTR const struct .
   599 ;;		 -> LEDs(8), 
   600 ;; Auto vars:     Size  Location     Type
   601 ;;  return_value    1    0        unsigned char 
   602 ;; Return value:  Size  Location     Type
   603 ;;                  1    wreg      unsigned char 
   604 ;; Registers used:
   605 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   606 ;; Tracked objects:
   607 ;;		On entry : 0/0
   608 ;;		On exit  : 0/0
   609 ;;		Unchanged: 0/0
   610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   611 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   613 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   614 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   615 ;;Total ram usage:        2 bytes
   616 ;; Hardware stack levels used: 1
   617 ;; Hardware stack levels required when called: 2
   618 ;; This function calls:
   619 ;;		_gpio_pin_intialize
   620 ;; This function is called by:
   621 ;;		_main
   622 ;; This function uses a non-reentrant model
   623 ;;
   624                           
   625                           	psect	text3
   626   00138E                     __ptext3:
   627                           	callstack 0
   628   00138E                     _led_initialize:
   629                           	callstack 28
   630   00138E                     
   631                           ;Ecu_Layer/LED/ecu_led.c: 21:     if((((void*)0) == led) || (((uint8)5 - 1) < led->port)
      +                           || (((uint8)8 - 1) < led->pin))
   632   00138E  502A               	movf	led_initialize@led^0,w,c
   633   001390  B4D8               	btfsc	status,2,c
   634   001392  EFCD  F009         	goto	u521
   635   001396  EFCF  F009         	goto	u520
   636   00139A                     u521:
   637   00139A  EFED  F009         	goto	l1133
   638   00139E                     u520:
   639   00139E  502A               	movf	led_initialize@led^0,w,c
   640   0013A0  6ED9               	movwf	fsr2l,c
   641   0013A2  6ADA               	clrf	fsr2h,c
   642   0013A4  50DF               	movf	223,w,c
   643   0013A6  0B07               	andlw	7
   644   0013A8  6E2B               	movwf	??_led_initialize^0,c
   645   0013AA  0E05               	movlw	5
   646   0013AC  602B               	cpfslt	??_led_initialize^0,c
   647   0013AE  EFDB  F009         	goto	u531
   648   0013B2  EFDD  F009         	goto	u530
   649   0013B6                     u531:
   650   0013B6  EFED  F009         	goto	l1133
   651   0013BA                     u530:
   652   0013BA  502A               	movf	led_initialize@led^0,w,c
   653   0013BC  6ED9               	movwf	fsr2l,c
   654   0013BE  6ADA               	clrf	fsr2h,c
   655   0013C0  30DF               	rrcf	223,w,c
   656   0013C2  32E8               	rrcf	wreg,f,c
   657   0013C4  32E8               	rrcf	wreg,f,c
   658   0013C6  0B07               	andlw	7
   659   0013C8  6E2B               	movwf	??_led_initialize^0,c
   660   0013CA  0E07               	movlw	7
   661   0013CC  642B               	cpfsgt	??_led_initialize^0,c
   662   0013CE  EFEB  F009         	goto	u541
   663   0013D2  EFED  F009         	goto	u540
   664   0013D6                     u541:
   665   0013D6  EFEF  F009         	goto	l1135
   666   0013DA                     u540:
   667   0013DA                     l1133:
   668                           
   669                           ;Ecu_Layer/LED/ecu_led.c: 24:     }
   670   0013DA  EFF3  F009         	goto	l13
   671   0013DE                     l1135:
   672   0013DE  C02A  F028         	movff	led_initialize@led,gpio_pin_intialize@pin_config
   673   0013E2  ECF4  F009         	call	_gpio_pin_intialize	;wreg free
   674   0013E6                     l13:
   675   0013E6  0012               	return		;funcret
   676   0013E8                     __end_of_led_initialize:
   677                           	callstack 0
   678                           
   679 ;; *************** function _gpio_pin_intialize *****************
   680 ;; Defined at:
   681 ;;		line 149 in file "Mcal_Layer/GPIO/hal_gpio.c"
   682 ;; Parameters:    Size  Location     Type
   683 ;;  pin_config      1    8[COMRAM] const PTR const struct .
   684 ;;		 -> LEDs(8), 
   685 ;; Auto vars:     Size  Location     Type
   686 ;;  return_value    1    9[COMRAM] unsigned char 
   687 ;; Return value:  Size  Location     Type
   688 ;;                  1    wreg      unsigned char 
   689 ;; Registers used:
   690 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   691 ;; Tracked objects:
   692 ;;		On entry : 0/0
   693 ;;		On exit  : 0/0
   694 ;;		Unchanged: 0/0
   695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   696 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   697 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   699 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   700 ;;Total ram usage:        2 bytes
   701 ;; Hardware stack levels used: 1
   702 ;; Hardware stack levels required when called: 1
   703 ;; This function calls:
   704 ;;		_gpio_pin_direction_intialize
   705 ;;		_gpio_pin_write_logic
   706 ;; This function is called by:
   707 ;;		_led_initialize
   708 ;; This function uses a non-reentrant model
   709 ;;
   710                           
   711                           	psect	text4
   712   0013E8                     __ptext4:
   713                           	callstack 0
   714   0013E8                     _gpio_pin_intialize:
   715                           	callstack 28
   716   0013E8                     
   717                           ;Mcal_Layer/GPIO/hal_gpio.c: 153:     if(((void*)0) == pin_config)
   718   0013E8  5028               	movf	gpio_pin_intialize@pin_config^0,w,c
   719   0013EA  A4D8               	btfss	status,2,c
   720   0013EC  EFFA  F009         	goto	u491
   721   0013F0  EFFC  F009         	goto	u490
   722   0013F4                     u491:
   723   0013F4  EF00  F00A         	goto	l1111
   724   0013F8                     u490:
   725   0013F8                     
   726                           ;Mcal_Layer/GPIO/hal_gpio.c: 154:     {;Mcal_Layer/GPIO/hal_gpio.c: 155:         return_
      +                          value = (Std_ReturnType)0x00;
   727   0013F8  0E00               	movlw	0
   728   0013FA  6E29               	movwf	gpio_pin_intialize@return_value^0,c
   729                           
   730                           ;Mcal_Layer/GPIO/hal_gpio.c: 156:     }
   731   0013FC  EF11  F00A         	goto	l1113
   732   001400                     l1111:
   733                           
   734                           ;Mcal_Layer/GPIO/hal_gpio.c: 158:     {;Mcal_Layer/GPIO/hal_gpio.c: 159:         return_
      +                          value = gpio_pin_direction_intialize(pin_config);
   735   001400  C028  F020         	movff	gpio_pin_intialize@pin_config,gpio_pin_direction_intialize@pin_config
   736   001404  EC01  F008         	call	_gpio_pin_direction_intialize	;wreg free
   737   001408  6E29               	movwf	gpio_pin_intialize@return_value^0,c
   738                           
   739                           ;Mcal_Layer/GPIO/hal_gpio.c: 160:         return_value = gpio_pin_write_logic(pin_config
      +                          , pin_config->logic);
   740   00140A  C028  F020         	movff	gpio_pin_intialize@pin_config,gpio_pin_write_logic@pin_config
   741   00140E  5028               	movf	gpio_pin_intialize@pin_config^0,w,c
   742   001410  6ED9               	movwf	fsr2l,c
   743   001412  6ADA               	clrf	fsr2h,c
   744   001414  0E00               	movlw	0
   745   001416  BEDF               	btfsc	indf2,7,c
   746   001418  0E01               	movlw	1
   747   00141A  6E21               	movwf	gpio_pin_write_logic@logic^0,c
   748   00141C  EC98  F008         	call	_gpio_pin_write_logic	;wreg free
   749   001420  6E29               	movwf	gpio_pin_intialize@return_value^0,c
   750   001422                     l1113:
   751                           
   752                           ;Mcal_Layer/GPIO/hal_gpio.c: 163:     return return_value;
   753   001422  5029               	movf	gpio_pin_intialize@return_value^0,w,c
   754   001424  0012               	return		;funcret
   755   001426                     __end_of_gpio_pin_intialize:
   756                           	callstack 0
   757                           
   758 ;; *************** function _gpio_pin_write_logic *****************
   759 ;; Defined at:
   760 ;;		line 73 in file "Mcal_Layer/GPIO/hal_gpio.c"
   761 ;; Parameters:    Size  Location     Type
   762 ;;  pin_config      1    0[COMRAM] const PTR const struct .
   763 ;;		 -> LEDs(8), 
   764 ;;  logic           1    1[COMRAM] const enum E2816
   765 ;; Auto vars:     Size  Location     Type
   766 ;;  return_value    1    7[COMRAM] unsigned char 
   767 ;; Return value:  Size  Location     Type
   768 ;;                  1    wreg      unsigned char 
   769 ;; Registers used:
   770 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   771 ;; Tracked objects:
   772 ;;		On entry : 0/0
   773 ;;		On exit  : 0/0
   774 ;;		Unchanged: 0/0
   775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   776 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   777 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   778 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   779 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   780 ;;Total ram usage:        8 bytes
   781 ;; Hardware stack levels used: 1
   782 ;; This function calls:
   783 ;;		Nothing
   784 ;; This function is called by:
   785 ;;		_gpio_pin_intialize
   786 ;;		_led_turn_on
   787 ;;		_led_turn_off
   788 ;; This function uses a non-reentrant model
   789 ;;
   790                           
   791                           	psect	text5
   792   001130                     __ptext5:
   793                           	callstack 0
   794   001130                     _gpio_pin_write_logic:
   795                           	callstack 28
   796   001130                     
   797                           ;Mcal_Layer/GPIO/hal_gpio.c: 73: Std_ReturnType gpio_pin_write_logic(const pin_config_t 
      +                          * const pin_config, const logic_t logic);Mcal_Layer/GPIO/hal_gpio.c: 74: {;Mcal_Layer/GP
      +                          IO/hal_gpio.c: 75:     Std_ReturnType return_value = (Std_ReturnType)0x01;
   798   001130  0E01               	movlw	1
   799   001132  6E27               	movwf	gpio_pin_write_logic@return_value^0,c
   800                           
   801                           ;Mcal_Layer/GPIO/hal_gpio.c: 77:     if(((void*)0) == pin_config)
   802   001134  5020               	movf	gpio_pin_write_logic@pin_config^0,w,c
   803   001136  A4D8               	btfss	status,2,c
   804   001138  EFA0  F008         	goto	u401
   805   00113C  EFA2  F008         	goto	u400
   806   001140                     u401:
   807   001140  EFF9  F008         	goto	l1077
   808   001144                     u400:
   809   001144                     l1069:
   810                           
   811                           ;Mcal_Layer/GPIO/hal_gpio.c: 78:     {;Mcal_Layer/GPIO/hal_gpio.c: 79:         return_va
      +                          lue = (Std_ReturnType)0x00;
   812   001144  0E00               	movlw	0
   813   001146  6E27               	movwf	gpio_pin_write_logic@return_value^0,c
   814                           
   815                           ;Mcal_Layer/GPIO/hal_gpio.c: 80:     }
   816   001148  EF0E  F009         	goto	l1079
   817   00114C                     l1071:
   818                           
   819                           ;Mcal_Layer/GPIO/hal_gpio.c: 86:                 (*lat_registers[pin_config->port] &= ~(
      +                          (uint8)1 << pin_config->pin));
   820   00114C  5020               	movf	gpio_pin_write_logic@pin_config^0,w,c
   821   00114E  6ED9               	movwf	fsr2l,c
   822   001150  6ADA               	clrf	fsr2h,c
   823   001152  30DF               	rrcf	223,w,c
   824   001154  32E8               	rrcf	wreg,f,c
   825   001156  32E8               	rrcf	wreg,f,c
   826   001158  0B07               	andlw	7
   827   00115A  6E22               	movwf	??_gpio_pin_write_logic^0,c
   828   00115C  0E01               	movlw	1
   829   00115E  6E23               	movwf	(??_gpio_pin_write_logic+1)^0,c
   830   001160  2A22               	incf	??_gpio_pin_write_logic^0,f,c
   831   001162  EFB5  F008         	goto	u414
   832   001166                     u415:
   833   001166  90D8               	bcf	status,0,c
   834   001168  3623               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
   835   00116A                     u414:
   836   00116A  2E22               	decfsz	??_gpio_pin_write_logic^0,f,c
   837   00116C  EFB3  F008         	goto	u415
   838   001170  5023               	movf	(??_gpio_pin_write_logic+1)^0,w,c
   839   001172  0AFF               	xorlw	255
   840   001174  6E24               	movwf	(??_gpio_pin_write_logic+2)^0,c
   841   001176  5020               	movf	gpio_pin_write_logic@pin_config^0,w,c
   842   001178  6ED9               	movwf	fsr2l,c
   843   00117A  6ADA               	clrf	fsr2h,c
   844   00117C  50DF               	movf	223,w,c
   845   00117E  0B07               	andlw	7
   846   001180  0D02               	mullw	2
   847   001182  50F3               	movf	243,w,c
   848   001184  0F0B               	addlw	low _lat_registers
   849   001186  6ED9               	movwf	fsr2l,c
   850   001188  6ADA               	clrf	fsr2h,c
   851   00118A  CFDE F025          	movff	postinc2,??_gpio_pin_write_logic+3
   852   00118E  CFDD F026          	movff	postdec2,??_gpio_pin_write_logic+4
   853   001192  C025  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
   854   001196  C026  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
   855   00119A  5024               	movf	(??_gpio_pin_write_logic+2)^0,w,c
   856   00119C  16DF               	andwf	indf2,f,c
   857                           
   858                           ;Mcal_Layer/GPIO/hal_gpio.c: 87:                 break;
   859   00119E  EF0E  F009         	goto	l1079
   860   0011A2                     l1073:
   861                           
   862                           ;Mcal_Layer/GPIO/hal_gpio.c: 90:                 (*lat_registers[pin_config->port] |= ((
      +                          uint8)1 << pin_config->pin));
   863   0011A2  5020               	movf	gpio_pin_write_logic@pin_config^0,w,c
   864   0011A4  6ED9               	movwf	fsr2l,c
   865   0011A6  6ADA               	clrf	fsr2h,c
   866   0011A8  30DF               	rrcf	223,w,c
   867   0011AA  32E8               	rrcf	wreg,f,c
   868   0011AC  32E8               	rrcf	wreg,f,c
   869   0011AE  0B07               	andlw	7
   870   0011B0  6E22               	movwf	??_gpio_pin_write_logic^0,c
   871   0011B2  0E01               	movlw	1
   872   0011B4  6E23               	movwf	(??_gpio_pin_write_logic+1)^0,c
   873   0011B6  2A22               	incf	??_gpio_pin_write_logic^0,f,c
   874   0011B8  EFE0  F008         	goto	u424
   875   0011BC                     u425:
   876   0011BC  90D8               	bcf	status,0,c
   877   0011BE  3623               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
   878   0011C0                     u424:
   879   0011C0  2E22               	decfsz	??_gpio_pin_write_logic^0,f,c
   880   0011C2  EFDE  F008         	goto	u425
   881   0011C6  5020               	movf	gpio_pin_write_logic@pin_config^0,w,c
   882   0011C8  6ED9               	movwf	fsr2l,c
   883   0011CA  6ADA               	clrf	fsr2h,c
   884   0011CC  50DF               	movf	223,w,c
   885   0011CE  0B07               	andlw	7
   886   0011D0  0D02               	mullw	2
   887   0011D2  50F3               	movf	243,w,c
   888   0011D4  0F0B               	addlw	low _lat_registers
   889   0011D6  6ED9               	movwf	fsr2l,c
   890   0011D8  6ADA               	clrf	fsr2h,c
   891   0011DA  CFDE F024          	movff	postinc2,??_gpio_pin_write_logic+2
   892   0011DE  CFDD F025          	movff	postdec2,??_gpio_pin_write_logic+3
   893   0011E2  C024  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
   894   0011E6  C025  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
   895   0011EA  5023               	movf	(??_gpio_pin_write_logic+1)^0,w,c
   896   0011EC  12DF               	iorwf	indf2,f,c
   897                           
   898                           ;Mcal_Layer/GPIO/hal_gpio.c: 91:                 break;
   899   0011EE  EF0E  F009         	goto	l1079
   900   0011F2                     l1077:
   901   0011F2  5021               	movf	gpio_pin_write_logic@logic^0,w,c
   902   0011F4  6E22               	movwf	??_gpio_pin_write_logic^0,c
   903   0011F6  6A23               	clrf	(??_gpio_pin_write_logic+1)^0,c
   904                           
   905                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   906                           ; Switch size 1, requested type "simple"
   907                           ; Number of cases is 1, Range of values is 0 to 0
   908                           ; switch strategies available:
   909                           ; Name         Instructions Cycles
   910                           ; simple_byte            4     3 (average)
   911                           ;	Chosen strategy is simple_byte
   912   0011F8  5023               	movf	(??_gpio_pin_write_logic+1)^0,w,c
   913   0011FA  0A00               	xorlw	0	; case 0
   914   0011FC  B4D8               	btfsc	status,2,c
   915   0011FE  EF03  F009         	goto	l1213
   916   001202  EFA2  F008         	goto	l1069
   917   001206                     l1213:
   918                           
   919                           ; Switch size 1, requested type "simple"
   920                           ; Number of cases is 2, Range of values is 0 to 1
   921                           ; switch strategies available:
   922                           ; Name         Instructions Cycles
   923                           ; simple_byte            7     4 (average)
   924                           ;	Chosen strategy is simple_byte
   925   001206  5022               	movf	??_gpio_pin_write_logic^0,w,c
   926   001208  0A00               	xorlw	0	; case 0
   927   00120A  B4D8               	btfsc	status,2,c
   928   00120C  EFA6  F008         	goto	l1071
   929   001210  0A01               	xorlw	1	; case 1
   930   001212  B4D8               	btfsc	status,2,c
   931   001214  EFD1  F008         	goto	l1073
   932   001218  EFA2  F008         	goto	l1069
   933   00121C                     l1079:
   934                           
   935                           ;Mcal_Layer/GPIO/hal_gpio.c: 98:     return return_value;
   936   00121C  5027               	movf	gpio_pin_write_logic@return_value^0,w,c
   937   00121E  0012               	return		;funcret
   938   001220                     __end_of_gpio_pin_write_logic:
   939                           	callstack 0
   940                           
   941 ;; *************** function _gpio_pin_direction_intialize *****************
   942 ;; Defined at:
   943 ;;		line 17 in file "Mcal_Layer/GPIO/hal_gpio.c"
   944 ;; Parameters:    Size  Location     Type
   945 ;;  pin_config      1    0[COMRAM] const PTR const struct .
   946 ;;		 -> LEDs(8), 
   947 ;; Auto vars:     Size  Location     Type
   948 ;;  return_value    1    6[COMRAM] unsigned char 
   949 ;; Return value:  Size  Location     Type
   950 ;;                  1    wreg      unsigned char 
   951 ;; Registers used:
   952 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   953 ;; Tracked objects:
   954 ;;		On entry : 0/0
   955 ;;		On exit  : 0/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   958 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   959 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   960 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   961 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   962 ;;Total ram usage:        7 bytes
   963 ;; Hardware stack levels used: 1
   964 ;; This function calls:
   965 ;;		Nothing
   966 ;; This function is called by:
   967 ;;		_gpio_pin_intialize
   968 ;; This function uses a non-reentrant model
   969 ;;
   970                           
   971                           	psect	text6
   972   001002                     __ptext6:
   973                           	callstack 0
   974   001002                     _gpio_pin_direction_intialize:
   975                           	callstack 28
   976   001002                     
   977                           ;Mcal_Layer/GPIO/hal_gpio.c: 17: Std_ReturnType gpio_pin_direction_intialize(const pin_c
      +                          onfig_t * const pin_config);Mcal_Layer/GPIO/hal_gpio.c: 18: {;Mcal_Layer/GPIO/hal_gpio.c
      +                          : 19:     Std_ReturnType return_value = (Std_ReturnType)0x01;
   978   001002  0E01               	movlw	1
   979   001004  6E26               	movwf	gpio_pin_direction_intialize@return_value^0,c
   980                           
   981                           ;Mcal_Layer/GPIO/hal_gpio.c: 21:     if((((void*)0) == pin_config) || (((uint8)8 - 1) < 
      +                          pin_config->pin) || (((uint8)5 - 1) < pin_config->port))
   982   001006  5020               	movf	gpio_pin_direction_intialize@pin_config^0,w,c
   983   001008  B4D8               	btfsc	status,2,c
   984   00100A  EF09  F008         	goto	u431
   985   00100E  EF0B  F008         	goto	u430
   986   001012                     u431:
   987   001012  EF29  F008         	goto	l1093
   988   001016                     u430:
   989   001016  5020               	movf	gpio_pin_direction_intialize@pin_config^0,w,c
   990   001018  6ED9               	movwf	fsr2l,c
   991   00101A  6ADA               	clrf	fsr2h,c
   992   00101C  30DF               	rrcf	223,w,c
   993   00101E  32E8               	rrcf	wreg,f,c
   994   001020  32E8               	rrcf	wreg,f,c
   995   001022  0B07               	andlw	7
   996   001024  6E21               	movwf	??_gpio_pin_direction_intialize^0,c
   997   001026  0E08               	movlw	8
   998   001028  6021               	cpfslt	??_gpio_pin_direction_intialize^0,c
   999   00102A  EF19  F008         	goto	u441
  1000   00102E  EF1B  F008         	goto	u440
  1001   001032                     u441:
  1002   001032  EF29  F008         	goto	l1093
  1003   001036                     u440:
  1004   001036  5020               	movf	gpio_pin_direction_intialize@pin_config^0,w,c
  1005   001038  6ED9               	movwf	fsr2l,c
  1006   00103A  6ADA               	clrf	fsr2h,c
  1007   00103C  50DF               	movf	223,w,c
  1008   00103E  0B07               	andlw	7
  1009   001040  6E21               	movwf	??_gpio_pin_direction_intialize^0,c
  1010   001042  0E04               	movlw	4
  1011   001044  6421               	cpfsgt	??_gpio_pin_direction_intialize^0,c
  1012   001046  EF27  F008         	goto	u451
  1013   00104A  EF29  F008         	goto	u450
  1014   00104E                     u451:
  1015   00104E  EF80  F008         	goto	l1101
  1016   001052                     u450:
  1017   001052                     l1093:
  1018                           
  1019                           ;Mcal_Layer/GPIO/hal_gpio.c: 22:     {;Mcal_Layer/GPIO/hal_gpio.c: 23:         return_va
      +                          lue = (Std_ReturnType)0x00;
  1020   001052  0E00               	movlw	0
  1021   001054  6E26               	movwf	gpio_pin_direction_intialize@return_value^0,c
  1022                           
  1023                           ;Mcal_Layer/GPIO/hal_gpio.c: 24:     }
  1024   001056  EF96  F008         	goto	l1103
  1025   00105A                     l1095:
  1026                           
  1027                           ;Mcal_Layer/GPIO/hal_gpio.c: 30:                 (*tris_registers[pin_config->port] &= ~
      +                          ((uint8)1 << pin_config->pin));
  1028   00105A  5020               	movf	gpio_pin_direction_intialize@pin_config^0,w,c
  1029   00105C  6ED9               	movwf	fsr2l,c
  1030   00105E  6ADA               	clrf	fsr2h,c
  1031   001060  30DF               	rrcf	223,w,c
  1032   001062  32E8               	rrcf	wreg,f,c
  1033   001064  32E8               	rrcf	wreg,f,c
  1034   001066  0B07               	andlw	7
  1035   001068  6E21               	movwf	??_gpio_pin_direction_intialize^0,c
  1036   00106A  0E01               	movlw	1
  1037   00106C  6E22               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  1038   00106E  2A21               	incf	??_gpio_pin_direction_intialize^0,f,c
  1039   001070  EF3C  F008         	goto	u464
  1040   001074                     u465:
  1041   001074  90D8               	bcf	status,0,c
  1042   001076  3622               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  1043   001078                     u464:
  1044   001078  2E21               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  1045   00107A  EF3A  F008         	goto	u465
  1046   00107E  5022               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1047   001080  0AFF               	xorlw	255
  1048   001082  6E23               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
  1049   001084  5020               	movf	gpio_pin_direction_intialize@pin_config^0,w,c
  1050   001086  6ED9               	movwf	fsr2l,c
  1051   001088  6ADA               	clrf	fsr2h,c
  1052   00108A  50DF               	movf	223,w,c
  1053   00108C  0B07               	andlw	7
  1054   00108E  0D02               	mullw	2
  1055   001090  50F3               	movf	243,w,c
  1056   001092  0F15               	addlw	low _tris_registers
  1057   001094  6ED9               	movwf	fsr2l,c
  1058   001096  6ADA               	clrf	fsr2h,c
  1059   001098  CFDE F024          	movff	postinc2,??_gpio_pin_direction_intialize+3
  1060   00109C  CFDD F025          	movff	postdec2,??_gpio_pin_direction_intialize+4
  1061   0010A0  C024  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
  1062   0010A4  C025  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
  1063   0010A8  5023               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
  1064   0010AA  16DF               	andwf	indf2,f,c
  1065                           
  1066                           ;Mcal_Layer/GPIO/hal_gpio.c: 31:                 break;
  1067   0010AC  EF96  F008         	goto	l1103
  1068   0010B0                     l1097:
  1069                           
  1070                           ;Mcal_Layer/GPIO/hal_gpio.c: 34:                 (*tris_registers[pin_config->port] |= (
      +                          (uint8)1 << pin_config->pin));
  1071   0010B0  5020               	movf	gpio_pin_direction_intialize@pin_config^0,w,c
  1072   0010B2  6ED9               	movwf	fsr2l,c
  1073   0010B4  6ADA               	clrf	fsr2h,c
  1074   0010B6  30DF               	rrcf	223,w,c
  1075   0010B8  32E8               	rrcf	wreg,f,c
  1076   0010BA  32E8               	rrcf	wreg,f,c
  1077   0010BC  0B07               	andlw	7
  1078   0010BE  6E21               	movwf	??_gpio_pin_direction_intialize^0,c
  1079   0010C0  0E01               	movlw	1
  1080   0010C2  6E22               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
  1081   0010C4  2A21               	incf	??_gpio_pin_direction_intialize^0,f,c
  1082   0010C6  EF67  F008         	goto	u474
  1083   0010CA                     u475:
  1084   0010CA  90D8               	bcf	status,0,c
  1085   0010CC  3622               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
  1086   0010CE                     u474:
  1087   0010CE  2E21               	decfsz	??_gpio_pin_direction_intialize^0,f,c
  1088   0010D0  EF65  F008         	goto	u475
  1089   0010D4  5020               	movf	gpio_pin_direction_intialize@pin_config^0,w,c
  1090   0010D6  6ED9               	movwf	fsr2l,c
  1091   0010D8  6ADA               	clrf	fsr2h,c
  1092   0010DA  50DF               	movf	223,w,c
  1093   0010DC  0B07               	andlw	7
  1094   0010DE  0D02               	mullw	2
  1095   0010E0  50F3               	movf	243,w,c
  1096   0010E2  0F15               	addlw	low _tris_registers
  1097   0010E4  6ED9               	movwf	fsr2l,c
  1098   0010E6  6ADA               	clrf	fsr2h,c
  1099   0010E8  CFDE F023          	movff	postinc2,??_gpio_pin_direction_intialize+2
  1100   0010EC  CFDD F024          	movff	postdec2,??_gpio_pin_direction_intialize+3
  1101   0010F0  C023  FFD9         	movff	??_gpio_pin_direction_intialize+2,fsr2l
  1102   0010F4  C024  FFDA         	movff	??_gpio_pin_direction_intialize+3,fsr2h
  1103   0010F8  5022               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
  1104   0010FA  12DF               	iorwf	indf2,f,c
  1105                           
  1106                           ;Mcal_Layer/GPIO/hal_gpio.c: 35:                 break;
  1107   0010FC  EF96  F008         	goto	l1103
  1108   001100                     l1101:
  1109   001100  5020               	movf	gpio_pin_direction_intialize@pin_config^0,w,c
  1110   001102  6ED9               	movwf	fsr2l,c
  1111   001104  6ADA               	clrf	fsr2h,c
  1112   001106  BCDF               	btfsc	indf2,6,c
  1113   001108  EF88  F008         	goto	u481
  1114   00110C  EF8B  F008         	goto	u480
  1115   001110                     u481:
  1116   001110  0E01               	movlw	1
  1117   001112  EF8C  F008         	goto	u486
  1118   001116                     u480:
  1119   001116  0E00               	movlw	0
  1120   001118                     u486:
  1121                           
  1122                           ; Switch size 1, requested type "simple"
  1123                           ; Number of cases is 2, Range of values is 0 to 1
  1124                           ; switch strategies available:
  1125                           ; Name         Instructions Cycles
  1126                           ; simple_byte            7     4 (average)
  1127                           ;	Chosen strategy is simple_byte
  1128   001118  0A00               	xorlw	0	; case 0
  1129   00111A  B4D8               	btfsc	status,2,c
  1130   00111C  EF2D  F008         	goto	l1095
  1131   001120  0A01               	xorlw	1	; case 1
  1132   001122  B4D8               	btfsc	status,2,c
  1133   001124  EF58  F008         	goto	l1097
  1134   001128  EF29  F008         	goto	l1093
  1135   00112C                     l1103:
  1136                           
  1137                           ;Mcal_Layer/GPIO/hal_gpio.c: 42:     return return_value;
  1138   00112C  5026               	movf	gpio_pin_direction_intialize@return_value^0,w,c
  1139   00112E  0012               	return		;funcret
  1140   001130                     __end_of_gpio_pin_direction_intialize:
  1141                           	callstack 0
  1142                           
  1143                           	psect	smallconst
  1144   001000                     __psmallconst:
  1145                           	callstack 0
  1146   001000  00                 	db	0
  1147   001001  00                 	db	0	; dummy byte at the end
  1148   000000                     
  1149                           	psect	rparam
  1150   000000                     
  1151                           	psect	config
  1152                           
  1153                           ; Padding undefined space
  1154   300000                     	org	3145728
  1155   300000  FF                 	db	255
  1156                           
  1157                           ;Config register CONFIG1H @ 0x300001
  1158                           ;	Oscillator Selection bits
  1159                           ;	OSC = HS, HS oscillator
  1160                           ;	Fail-Safe Clock Monitor Enable bit
  1161                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1162                           ;	Internal/External Oscillator Switchover bit
  1163                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1164   300001                     	org	3145729
  1165   300001  02                 	db	2
  1166                           
  1167                           ;Config register CONFIG2L @ 0x300002
  1168                           ;	Power-up Timer Enable bit
  1169                           ;	PWRT = OFF, PWRT disabled
  1170                           ;	Brown-out Reset Enable bits
  1171                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  1172                           ;	Brown Out Reset Voltage bits
  1173                           ;	BORV = 1, 
  1174   300002                     	org	3145730
  1175   300002  09                 	db	9
  1176                           
  1177                           ;Config register CONFIG2H @ 0x300003
  1178                           ;	Watchdog Timer Enable bit
  1179                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1180                           ;	Watchdog Timer Postscale Select bits
  1181                           ;	WDTPS = 32768, 1:32768
  1182   300003                     	org	3145731
  1183   300003  1E                 	db	30
  1184                           
  1185                           ; Padding undefined space
  1186   300004                     	org	3145732
  1187   300004  FF                 	db	255
  1188                           
  1189                           ;Config register CONFIG3H @ 0x300005
  1190                           ;	CCP2 MUX bit
  1191                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1192                           ;	PORTB A/D Enable bit
  1193                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1194                           ;	Low-Power Timer1 Oscillator Enable bit
  1195                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1196                           ;	MCLR Pin Enable bit
  1197                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1198   300005                     	org	3145733
  1199   300005  81                 	db	129
  1200                           
  1201                           ;Config register CONFIG4L @ 0x300006
  1202                           ;	Stack Full/Underflow Reset Enable bit
  1203                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1204                           ;	Single-Supply ICSP Enable bit
  1205                           ;	LVP = OFF, Single-Supply ICSP disabled
  1206                           ;	Extended Instruction Set Enable bit
  1207                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1208                           ;	Background Debugger Enable bit
  1209                           ;	DEBUG = 0x1, unprogrammed default
  1210   300006                     	org	3145734
  1211   300006  81                 	db	129
  1212                           
  1213                           ; Padding undefined space
  1214   300007                     	org	3145735
  1215   300007  FF                 	db	255
  1216                           
  1217                           ;Config register CONFIG5L @ 0x300008
  1218                           ;	Code Protection bit
  1219                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1220                           ;	Code Protection bit
  1221                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1222                           ;	Code Protection bit
  1223                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1224                           ;	Code Protection bit
  1225                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1226   300008                     	org	3145736
  1227   300008  0F                 	db	15
  1228                           
  1229                           ;Config register CONFIG5H @ 0x300009
  1230                           ;	Boot Block Code Protection bit
  1231                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1232                           ;	Data EEPROM Code Protection bit
  1233                           ;	CPD = OFF, Data EEPROM not code-protected
  1234   300009                     	org	3145737
  1235   300009  C0                 	db	192
  1236                           
  1237                           ;Config register CONFIG6L @ 0x30000A
  1238                           ;	Write Protection bit
  1239                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1240                           ;	Write Protection bit
  1241                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1242                           ;	Write Protection bit
  1243                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1244                           ;	Write Protection bit
  1245                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1246   30000A                     	org	3145738
  1247   30000A  0F                 	db	15
  1248                           
  1249                           ;Config register CONFIG6H @ 0x30000B
  1250                           ;	Configuration Register Write Protection bit
  1251                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1252                           ;	Boot Block Write Protection bit
  1253                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1254                           ;	Data EEPROM Write Protection bit
  1255                           ;	WRTD = OFF, Data EEPROM not write-protected
  1256   30000B                     	org	3145739
  1257   30000B  E0                 	db	224
  1258                           
  1259                           ;Config register CONFIG7L @ 0x30000C
  1260                           ;	Table Read Protection bit
  1261                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1262                           ;	Table Read Protection bit
  1263                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1264                           ;	Table Read Protection bit
  1265                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1266                           ;	Table Read Protection bit
  1267                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1268   30000C                     	org	3145740
  1269   30000C  0F                 	db	15
  1270                           
  1271                           ;Config register CONFIG7H @ 0x30000D
  1272                           ;	Boot Block Table Read Protection bit
  1273                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1274   30000D                     	org	3145741
  1275   30000D  40                 	db	64
  1276                           tosu	equ	0xFFF
  1277                           tosh	equ	0xFFE
  1278                           tosl	equ	0xFFD
  1279                           stkptr	equ	0xFFC
  1280                           pclatu	equ	0xFFB
  1281                           pclath	equ	0xFFA
  1282                           pcl	equ	0xFF9
  1283                           tblptru	equ	0xFF8
  1284                           tblptrh	equ	0xFF7
  1285                           tblptrl	equ	0xFF6
  1286                           tablat	equ	0xFF5
  1287                           prodh	equ	0xFF4
  1288                           prodl	equ	0xFF3
  1289                           indf0	equ	0xFEF
  1290                           postinc0	equ	0xFEE
  1291                           postdec0	equ	0xFED
  1292                           preinc0	equ	0xFEC
  1293                           plusw0	equ	0xFEB
  1294                           fsr0h	equ	0xFEA
  1295                           fsr0l	equ	0xFE9
  1296                           wreg	equ	0xFE8
  1297                           indf1	equ	0xFE7
  1298                           postinc1	equ	0xFE6
  1299                           postdec1	equ	0xFE5
  1300                           preinc1	equ	0xFE4
  1301                           plusw1	equ	0xFE3
  1302                           fsr1h	equ	0xFE2
  1303                           fsr1l	equ	0xFE1
  1304                           bsr	equ	0xFE0
  1305                           indf2	equ	0xFDF
  1306                           postinc2	equ	0xFDE
  1307                           postdec2	equ	0xFDD
  1308                           preinc2	equ	0xFDC
  1309                           plusw2	equ	0xFDB
  1310                           fsr2h	equ	0xFDA
  1311                           fsr2l	equ	0xFD9
  1312                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        31
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     16      55
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    gpio_pin_direction_intialize@pin_config	const PTR const struct . size(1) Largest target is 8
		 -> LEDs(COMRAM[8]), 

    gpio_pin_intialize@pin_config	const PTR const struct . size(1) Largest target is 8
		 -> LEDs(COMRAM[8]), 

    gpio_pin_toggle_logic@pin_config	const PTR const struct . size(1) Largest target is 8
		 -> LEDs(COMRAM[8]), 

    gpio_pin_write_logic@pin_config	const PTR const struct . size(1) Largest target is 8
		 -> LEDs(COMRAM[8]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    led_initialize@led	const PTR const struct . size(1) Largest target is 8
		 -> LEDs(COMRAM[8]), 

    led_toggle@led	const PTR const struct . size(1) Largest target is 8
		 -> LEDs(COMRAM[8]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    _main->_led_initialize
    _led_toggle->_gpio_pin_toggle_logic
    _led_initialize->_gpio_pin_intialize
    _gpio_pin_intialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1854
                                             12 COMRAM     4     4      0
                     _led_initialize
                         _led_toggle
 ---------------------------------------------------------------------------------
 (1) _led_toggle                                           3     2      1     355
                                              6 COMRAM     3     2      1
              _gpio_pin_toggle_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_toggle_logic                                6     5      1     166
                                              0 COMRAM     6     5      1
 ---------------------------------------------------------------------------------
 (1) _led_initialize                                       3     2      1    1253
                                             10 COMRAM     2     1      1
                 _gpio_pin_intialize
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_intialize                                   2     1      1    1080
                                              8 COMRAM     2     1      1
       _gpio_pin_direction_intialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_write_logic                                 8     6      2     613
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_intialize                         7     6      1     277
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _led_initialize
     _gpio_pin_intialize
       _gpio_pin_direction_intialize
       _gpio_pin_write_logic
   _led_toggle
     _gpio_pin_toggle_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     10      37       1       43.3%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      37      39        0.0%
DATA                 0      0      37       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Jun 28 20:50:54 2024

                                      l13 13E6                                        l34 138C  
                                      l82 112E                                        l99 121E  
                                     l111 132A                                       l116 1424  
                                     u400 1144                                       u401 1140  
                                     u500 12D4                                       u501 12D0  
                                     u430 1016                                       u414 116A  
                                     u431 1012                                       u415 1166  
                                     u440 1036                                       u424 11C0  
                                     u520 139E                                       u441 1032  
                                     u425 11BC                                       u521 139A  
                                     u450 1052                                       u530 13BA  
                                     u514 12FA                                       u451 104E  
                                     u531 13B6                                       u515 12F6  
                                     u540 13DA                                       u541 13D6  
                                     u550 133C                                       u551 1338  
                                     u480 1116                                       u464 1078  
                                     u560 1358                                       u640 1280  
                                     u481 1110                                       u465 1074  
                                     u561 1354                                       u641 127C  
                                     u474 10CE                                       u490 13F8  
                                     u570 1378                                       u650 12B8  
                                     u475 10CA                                       u491 13F4  
                                     u571 1374                                       u651 12B4  
                                     u486 1118                                       u667 129A  
                                     wreg 0FE8                                      l1101 1100  
                                    l1103 112C                                      l1111 1400  
                                    l1113 1422                                      l1121 12DC  
                                    l1201 1284                                      l1107 13E8  
                                    l1131 13BA                                      l1123 1328  
                                    l1203 1290                                      l1213 1206  
                                    l1109 13F8                                      l1133 13DA  
                                    l1117 12C0                                      l1141 133C  
                                    l1205 12A6                                      l1071 114C  
                                    l1135 13DE                                      l1127 138E  
                                    l1119 12D4                                      l1143 1358  
                                    l1207 12A8                                      l1073 11A2  
                                    l1129 139E                                      l1145 1378  
                                    l1091 1036                                      l1067 1130  
                                    l1147 1380                                      l1139 132C  
                                    l1093 1052                                      l1069 1144  
                                    l1077 11F2                                      l1149 138A  
                                    l1181 1220                                      l1095 105A  
                                    l1087 1002                                      l1079 121C  
                                    l1191 126E                                      l1097 10B0  
                                    l1089 1016                                      l1193 1270  
                                    l1195 1280                                      l1187 1224  
                                    l1189 1264                                      _LATA 0F89  
                                    _LATB 0F8A                                      _LATC 0F8B  
                                    _LATD 0F8C                                      _LATE 0F8D  
                                    _LEDs 0030                                      _main 1220  
                                    fsr2h 0FDA                                      indf2 0FDF  
                                    fsr1l 0FE1                                      fsr2l 0FD9  
                  __end_of_led_initialize 13E8                                      prodl 0FF3  
                                    start 0000                              ___param_bank 0000  
                  ?_gpio_pin_toggle_logic 0020  gpio_pin_direction_intialize@return_value 0026  
                    _gpio_pin_write_logic 1130                                     ?_main 0020  
                                   _PORTA 0F80                                     _PORTB 0F81  
                                   _PORTC 0F82                                     _PORTD 0F83  
                                   _PORTE 0F84                                     _TRISA 0F92  
                                   _TRISB 0F93                                     _TRISC 0F94  
                                   _TRISD 0F95                                     _TRISE 0F96  
                                   tablat 0FF5                                     status 0FD8  
                         ?_led_initialize 002A                           __initialization 1426  
                            __end_of_main 12C0                     ?_gpio_pin_write_logic 0020  
                           _lat_registers 000B                                    ??_main 002C  
                           __activetblptr 0002                             main@index_256 002E  
                                  clear_0 144C                                    isa$std 0001  
                            __pdataCOMRAM 0001                              __mediumconst 0000  
                                  tblptrh 0FF7                                    tblptrl 0FF6  
                                  tblptru 0FF8                                __accesstop 0080  
                 __end_of__initialization 1452                             ___rparam_used 0001  
                       led_initialize@led 002A                    ??_gpio_pin_write_logic 0022  
                          __pcstackCOMRAM 0020                   ??_gpio_pin_toggle_logic 0021  
                           led_toggle@led 0026                          ??_led_initialize 002B  
                              _led_toggle 132C                            _tris_registers 0015  
                                 __Hparam 0000                                   __Lparam 0000  
                            __psmallconst 1000                __end_of_gpio_pin_intialize 1426  
                                 __pcinit 1426                                   __ramtop 1000  
                                 __ptext0 1220                                   __ptext1 132C  
                                 __ptext2 12C0                                   __ptext3 138E  
                                 __ptext4 13E8                                   __ptext5 1130  
                                 __ptext6 1002                                   _ret_val 001F  
                    end_of_initialization 1452                             __Lmediumconst 0000  
                                 postdec1 0FE5                                   postdec2 0FDD  
                                 postinc0 0FEE                                   postinc2 0FDE  
    __end_of_gpio_pin_direction_intialize 1130              _gpio_pin_direction_intialize 1002  
                             ?_led_toggle 0026                             __pidataCOMRAM 145C  
        gpio_pin_write_logic@return_value 0027                       start_initialization 1426  
           ?_gpio_pin_direction_intialize 0020         gpio_pin_toggle_logic@return_value 0025  
           __end_of_gpio_pin_toggle_logic 132C            gpio_pin_intialize@return_value 0029  
                             __pbssCOMRAM 0030            gpio_pin_write_logic@pin_config 0020  
               gpio_pin_write_logic@logic 0021                               __smallconst 1000  
                      _gpio_pin_intialize 13E8            ??_gpio_pin_direction_intialize 0021  
                     ?_gpio_pin_intialize 0028                    led_toggle@return_value 0028  
                    ??_gpio_pin_intialize 0029                                 main@index 002F  
                               copy_data0 143A                              ??_led_toggle 0027  
                                __Hrparam 0000                                  __Lrparam 0000  
                      __end_of_led_toggle 138E              gpio_pin_intialize@pin_config 0028  
                                isa$xinst 0000              __end_of_gpio_pin_write_logic 1220  
         gpio_pin_toggle_logic@pin_config 0020    gpio_pin_direction_intialize@pin_config 0020  
                   _gpio_pin_toggle_logic 12C0                            _port_registers 0001  
                          _led_initialize 138E  
