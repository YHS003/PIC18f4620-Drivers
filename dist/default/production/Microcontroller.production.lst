

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Jun 30 19:40:29 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    16                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    17                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    19   000000                     
    20                           ; Generated 17/10/2023 GMT
    21                           ; 
    22                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F4620 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54   000000                     
    55                           	psect	idataCOMRAM
    56   001364                     __pidataCOMRAM:
    57                           	callstack 0
    58                           
    59                           ;initializer for _port_registers
    60   001364  80                 	db	128
    61   001365  0F                 	db	15
    62   001366  81                 	db	129
    63   001367  0F                 	db	15
    64   001368  82                 	db	130
    65   001369  0F                 	db	15
    66   00136A  83                 	db	131
    67   00136B  0F                 	db	15
    68   00136C  84                 	db	132
    69   00136D  0F                 	db	15
    70                           
    71                           ;initializer for _lat_registers
    72   00136E  89                 	db	137
    73   00136F  0F                 	db	15
    74   001370  8A                 	db	138
    75   001371  0F                 	db	15
    76   001372  8B                 	db	139
    77   001373  0F                 	db	15
    78   001374  8C                 	db	140
    79   001375  0F                 	db	15
    80   001376  8D                 	db	141
    81   001377  0F                 	db	15
    82                           
    83                           ;initializer for _tris_registers
    84   001378  92                 	db	146
    85   001379  0F                 	db	15
    86   00137A  93                 	db	147
    87   00137B  0F                 	db	15
    88   00137C  94                 	db	148
    89   00137D  0F                 	db	15
    90   00137E  95                 	db	149
    91   00137F  0F                 	db	15
    92   001380  96                 	db	150
    93   001381  0F                 	db	15
    94                           
    95                           ;initializer for _btn2
    96   001382  4B                 	db	75
    97   001383  01                 	db	1
    98   001384  01                 	db	1
    99                           
   100                           ;initializer for _btn1
   101   001385  43                 	db	67
   102   001386  01                 	db	1
   103   001387  00                 	db	0
   104                           
   105                           ;initializer for _btn2_state
   106   001388  01                 	db	1
   107                           
   108                           ;initializer for _btn1_state
   109   001389  01                 	db	1
   110                           
   111                           	psect	nvCOMRAM
   112   000034                     __pnvCOMRAM:
   113                           	callstack 0
   114   000034                     _btn2_ret:
   115                           	callstack 0
   116   000034                     	ds	1
   117   000035                     _btn1_ret:
   118                           	callstack 0
   119   000035                     	ds	1
   120   000000                     _PORTE	set	3972
   121   000000                     _PORTD	set	3971
   122   000000                     _PORTC	set	3970
   123   000000                     _PORTB	set	3969
   124   000000                     _PORTA	set	3968
   125   000000                     _LATA	set	3977
   126   000000                     _TRISA	set	3986
   127   000000                     _TRISE	set	3990
   128   000000                     _TRISD	set	3989
   129   000000                     _TRISC	set	3988
   130   000000                     _TRISB	set	3987
   131   000000                     _LATE	set	3981
   132   000000                     _LATD	set	3980
   133   000000                     _LATC	set	3979
   134   000000                     _LATB	set	3978
   135                           
   136                           ; #config settings
   137                           
   138                           	psect	cinit
   139   00133A                     __pcinit:
   140                           	callstack 0
   141   00133A                     start_initialization:
   142                           	callstack 0
   143   00133A                     __initialization:
   144                           	callstack 0
   145                           
   146                           ; Initialize objects allocated to COMRAM (38 bytes)
   147                           ; load TBLPTR registers with __pidataCOMRAM
   148   00133A  0E64               	movlw	low __pidataCOMRAM
   149   00133C  6EF6               	movwf	tblptrl,c
   150   00133E  0E13               	movlw	high __pidataCOMRAM
   151   001340  6EF7               	movwf	tblptrh,c
   152   001342  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   153   001344  6EF8               	movwf	tblptru,c
   154   001346  EE00  F001         	lfsr	0,__pdataCOMRAM
   155   00134A  EE10 F026          	lfsr	1,38
   156   00134E                     copy_data0:
   157   00134E  0009               	tblrd		*+
   158   001350  CFF5 FFEE          	movff	tablat,postinc0
   159   001354  50E5               	movf	postdec1,w,c
   160   001356  50E1               	movf	fsr1l,w,c
   161   001358  E1FA               	bnz	copy_data0
   162   00135A                     end_of_initialization:
   163                           	callstack 0
   164   00135A                     __end_of__initialization:
   165                           	callstack 0
   166   00135A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   167   00135C  6EF8               	movwf	tblptru,c
   168   00135E  0100               	movlb	0
   169   001360  EF81  F009         	goto	_main	;jump to C main() function
   170                           
   171                           	psect	dataCOMRAM
   172   000001                     __pdataCOMRAM:
   173                           	callstack 0
   174   000001                     _port_registers:
   175                           	callstack 0
   176   000001                     	ds	10
   177   00000B                     _lat_registers:
   178                           	callstack 0
   179   00000B                     	ds	10
   180   000015                     _tris_registers:
   181                           	callstack 0
   182   000015                     	ds	10
   183   00001F                     _btn2:
   184                           	callstack 0
   185   00001F                     	ds	3
   186   000022                     _btn1:
   187                           	callstack 0
   188   000022                     	ds	3
   189   000025                     _btn2_state:
   190                           	callstack 0
   191   000025                     	ds	1
   192   000026                     _btn1_state:
   193                           	callstack 0
   194   000026                     	ds	1
   195                           
   196                           	psect	cstackCOMRAM
   197   000027                     __pcstackCOMRAM:
   198                           	callstack 0
   199   000027                     gpio_pin_direction_intialize@pin_config:
   200                           	callstack 0
   201   000027                     gpio_pin_read_logic@pin_config:
   202                           	callstack 0
   203                           
   204                           ; 1 bytes @ 0x0
   205   000027                     	ds	1
   206   000028                     ??_gpio_pin_direction_intialize:
   207   000028                     gpio_pin_read_logic@logic:
   208                           	callstack 0
   209                           
   210                           ; 1 bytes @ 0x1
   211   000028                     	ds	1
   212   000029                     ??_gpio_pin_read_logic:
   213                           
   214                           ; 1 bytes @ 0x2
   215   000029                     	ds	4
   216   00002D                     gpio_pin_direction_intialize@return_value:
   217                           	callstack 0
   218   00002D                     gpio_pin_read_logic@return_value:
   219                           	callstack 0
   220                           
   221                           ; 1 bytes @ 0x6
   222   00002D                     	ds	1
   223   00002E                     button_initialize@btn:
   224                           	callstack 0
   225   00002E                     button_read_state@btn:
   226                           	callstack 0
   227                           
   228                           ; 1 bytes @ 0x7
   229   00002E                     	ds	1
   230   00002F                     ??_button_initialize:
   231   00002F                     button_read_state@btn_state:
   232                           	callstack 0
   233                           
   234                           ; 1 bytes @ 0x8
   235   00002F                     	ds	1
   236   000030                     ??_button_read_state:
   237   000030                     button_initialize@return_value:
   238                           	callstack 0
   239                           
   240                           ; 1 bytes @ 0x9
   241   000030                     	ds	2
   242   000032                     button_read_state@return_value:
   243                           	callstack 0
   244                           
   245                           ; 1 bytes @ 0xB
   246   000032                     	ds	1
   247   000033                     button_read_state@btn_logic_state:
   248                           	callstack 0
   249                           
   250                           ; 1 bytes @ 0xC
   251   000033                     	ds	1
   252   000034                     
   253                           ; 1 bytes @ 0xD
   254 ;;
   255 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   256 ;;
   257 ;; *************** function _main *****************
   258 ;; Defined at:
   259 ;;		line 36 in file "Application.c"
   260 ;; Parameters:    Size  Location     Type
   261 ;;		None
   262 ;; Auto vars:     Size  Location     Type
   263 ;;		None
   264 ;; Return value:  Size  Location     Type
   265 ;;                  2  165[None  ] int 
   266 ;; Registers used:
   267 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   268 ;; Tracked objects:
   269 ;;		On entry : 0/0
   270 ;;		On exit  : 0/0
   271 ;;		Unchanged: 0/0
   272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   277 ;;Total ram usage:        0 bytes
   278 ;; Hardware stack levels required when called: 2
   279 ;; This function calls:
   280 ;;		_button_initialize
   281 ;;		_button_read_state
   282 ;; This function is called by:
   283 ;;		Startup code after reset
   284 ;; This function uses a non-reentrant model
   285 ;;
   286                           
   287                           	psect	text0
   288   001302                     __ptext0:
   289                           	callstack 0
   290   001302                     _main:
   291                           	callstack 29
   292   001302                     
   293                           ;Application.c: 38:     btn1_ret = button_initialize(&btn1);
   294   001302  0E22               	movlw	low _btn1
   295   001304  6E2E               	movwf	button_initialize@btn^0,c
   296   001306  EC50  F009         	call	_button_initialize	;wreg free
   297   00130A  6E35               	movwf	_btn1_ret^0,c
   298                           
   299                           ;Application.c: 39:     btn2_ret = button_initialize(&btn2);
   300   00130C  0E1F               	movlw	low _btn2
   301   00130E  6E2E               	movwf	button_initialize@btn^0,c
   302   001310  EC50  F009         	call	_button_initialize	;wreg free
   303   001314  6E34               	movwf	_btn2_ret^0,c
   304   001316                     l1246:
   305                           
   306                           ;Application.c: 42:     {;Application.c: 43:         btn1_ret = button_read_state(&btn1,
      +                           &btn1_state);
   307   001316  0E22               	movlw	low _btn1
   308   001318  6E2E               	movwf	button_read_state@btn^0,c
   309   00131A  0E26               	movlw	low _btn1_state
   310   00131C  6E2F               	movwf	button_read_state@btn_state^0,c
   311   00131E  EC98  F008         	call	_button_read_state	;wreg free
   312   001322  6E35               	movwf	_btn1_ret^0,c
   313   001324                     
   314                           ;Application.c: 44:         btn2_ret = button_read_state(&btn2, &btn2_state);
   315   001324  0E1F               	movlw	low _btn2
   316   001326  6E2E               	movwf	button_read_state@btn^0,c
   317   001328  0E25               	movlw	low _btn2_state
   318   00132A  6E2F               	movwf	button_read_state@btn_state^0,c
   319   00132C  EC98  F008         	call	_button_read_state	;wreg free
   320   001330  6E34               	movwf	_btn2_ret^0,c
   321   001332  EF8B  F009         	goto	l1246
   322   001336  EF00  F000         	goto	start
   323   00133A                     __end_of_main:
   324                           	callstack 0
   325                           
   326 ;; *************** function _button_read_state *****************
   327 ;; Defined at:
   328 ;;		line 43 in file "Ecu_Layer/PUSH_BUTTON/ecu_push_button.c"
   329 ;; Parameters:    Size  Location     Type
   330 ;;  btn             1    7[COMRAM] const PTR const struct .
   331 ;;		 -> btn2(3), btn1(3), 
   332 ;;  btn_state       1    8[COMRAM] const PTR enum E2896
   333 ;;		 -> btn2_state(1), btn1_state(1), 
   334 ;; Auto vars:     Size  Location     Type
   335 ;;  btn_logic_st    1   12[COMRAM] enum E2816
   336 ;;  return_value    1   11[COMRAM] unsigned char 
   337 ;; Return value:  Size  Location     Type
   338 ;;                  1    wreg      unsigned char 
   339 ;; Registers used:
   340 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   341 ;; Tracked objects:
   342 ;;		On entry : 0/0
   343 ;;		On exit  : 0/0
   344 ;;		Unchanged: 0/0
   345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   346 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   347 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   348 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   349 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   350 ;;Total ram usage:        6 bytes
   351 ;; Hardware stack levels used: 1
   352 ;; Hardware stack levels required when called: 1
   353 ;; This function calls:
   354 ;;		_gpio_pin_read_logic
   355 ;; This function is called by:
   356 ;;		_main
   357 ;; This function uses a non-reentrant model
   358 ;;
   359                           
   360                           	psect	text1
   361   001130                     __ptext1:
   362                           	callstack 0
   363   001130                     _button_read_state:
   364                           	callstack 29
   365   001130                     
   366                           ;Ecu_Layer/PUSH_BUTTON/ecu_push_button.c: 47:     if((((void*)0) == btn) || (((void*)0) 
      +                          == btn_state) ||
   367   001130  502E               	movf	button_read_state@btn^0,w,c
   368   001132  B4D8               	btfsc	status,2,c
   369   001134  EF9E  F008         	goto	u591
   370   001138  EFA0  F008         	goto	u590
   371   00113C                     u591:
   372   00113C  EFC6  F008         	goto	l1188
   373   001140                     u590:
   374   001140  502F               	movf	button_read_state@btn_state^0,w,c
   375   001142  B4D8               	btfsc	status,2,c
   376   001144  EFA6  F008         	goto	u601
   377   001148  EFA8  F008         	goto	u600
   378   00114C                     u601:
   379   00114C  EFC6  F008         	goto	l1188
   380   001150                     u600:
   381   001150  502E               	movf	button_read_state@btn^0,w,c
   382   001152  6ED9               	movwf	fsr2l,c
   383   001154  6ADA               	clrf	fsr2h,c
   384   001156  30DF               	rrcf	223,w,c
   385   001158  32E8               	rrcf	wreg,f,c
   386   00115A  32E8               	rrcf	wreg,f,c
   387   00115C  0B07               	andlw	7
   388   00115E  6E30               	movwf	??_button_read_state^0,c
   389   001160  0E08               	movlw	8
   390   001162  6030               	cpfslt	??_button_read_state^0,c
   391   001164  EFB6  F008         	goto	u611
   392   001168  EFB8  F008         	goto	u610
   393   00116C                     u611:
   394   00116C  EFC6  F008         	goto	l1188
   395   001170                     u610:
   396   001170  502E               	movf	button_read_state@btn^0,w,c
   397   001172  6ED9               	movwf	fsr2l,c
   398   001174  6ADA               	clrf	fsr2h,c
   399   001176  50DF               	movf	223,w,c
   400   001178  0B07               	andlw	7
   401   00117A  6E30               	movwf	??_button_read_state^0,c
   402   00117C  0E04               	movlw	4
   403   00117E  6430               	cpfsgt	??_button_read_state^0,c
   404   001180  EFC4  F008         	goto	u621
   405   001184  EFC6  F008         	goto	u620
   406   001188                     u621:
   407   001188  EFCA  F008         	goto	l1190
   408   00118C                     u620:
   409   00118C                     l1188:
   410                           
   411                           ;Ecu_Layer/PUSH_BUTTON/ecu_push_button.c: 50:     {;Ecu_Layer/PUSH_BUTTON/ecu_push_butto
      +                          n.c: 51:         return_value = (Std_ReturnType)0x00;
   412   00118C  0E00               	movlw	0
   413   00118E  6E32               	movwf	button_read_state@return_value^0,c
   414                           
   415                           ;Ecu_Layer/PUSH_BUTTON/ecu_push_button.c: 52:     }
   416   001190  EF0C  F009         	goto	l1210
   417   001194                     l1190:
   418                           
   419                           ;Ecu_Layer/PUSH_BUTTON/ecu_push_button.c: 54:     {;Ecu_Layer/PUSH_BUTTON/ecu_push_butto
      +                          n.c: 55:         logic_t btn_logic_state;;Ecu_Layer/PUSH_BUTTON/ecu_push_button.c: 57:  
      +                                 return_value = gpio_pin_read_logic(&(btn->button_pin), &btn_logic_state);
   420   001194  C02E  F027         	movff	button_read_state@btn,gpio_pin_read_logic@pin_config
   421   001198  0E33               	movlw	low button_read_state@btn_logic_state
   422   00119A  6E28               	movwf	gpio_pin_read_logic@logic^0,c
   423   00119C  EC0E  F009         	call	_gpio_pin_read_logic	;wreg free
   424   0011A0  6E32               	movwf	button_read_state@return_value^0,c
   425                           
   426                           ;Ecu_Layer/PUSH_BUTTON/ecu_push_button.c: 59:         switch(btn->button_connection)
   427   0011A2  EFF2  F008         	goto	l1208
   428   0011A6                     l1192:
   429                           
   430                           ;Ecu_Layer/PUSH_BUTTON/ecu_push_button.c: 63:                 if(HIGH == btn_logic_state
      +                          )
   431   0011A6  0433               	decf	button_read_state@btn_logic_state^0,w,c
   432   0011A8  A4D8               	btfss	status,2,c
   433   0011AA  EFD9  F008         	goto	u631
   434   0011AE  EFDB  F008         	goto	u630
   435   0011B2                     u631:
   436   0011B2  EFE1  F008         	goto	l1196
   437   0011B6                     u630:
   438   0011B6                     l1194:
   439                           
   440                           ;Ecu_Layer/PUSH_BUTTON/ecu_push_button.c: 64:                 {;Ecu_Layer/PUSH_BUTTON/ec
      +                          u_push_button.c: 65:                     *btn_state = BUTTON_PRESSED;
   441   0011B6  502F               	movf	button_read_state@btn_state^0,w,c
   442   0011B8  6ED9               	movwf	fsr2l,c
   443   0011BA  6ADA               	clrf	fsr2h,c
   444   0011BC  6ADF               	clrf	indf2,c
   445                           
   446                           ;Ecu_Layer/PUSH_BUTTON/ecu_push_button.c: 66:                 }
   447   0011BE  EF0C  F009         	goto	l1210
   448   0011C2                     l1196:
   449                           
   450                           ;Ecu_Layer/PUSH_BUTTON/ecu_push_button.c: 68:                 {;Ecu_Layer/PUSH_BUTTON/ec
      +                          u_push_button.c: 69:                     *btn_state = BUTTON_NOT_PRESSED;
   451   0011C2  502F               	movf	button_read_state@btn_state^0,w,c
   452   0011C4  6ED9               	movwf	fsr2l,c
   453   0011C6  6ADA               	clrf	fsr2h,c
   454   0011C8  0E01               	movlw	1
   455   0011CA  6EDF               	movwf	indf2,c
   456   0011CC  EF0C  F009         	goto	l1210
   457   0011D0                     l1198:
   458                           
   459                           ;Ecu_Layer/PUSH_BUTTON/ecu_push_button.c: 76:                 if(LOW == btn_logic_state)
   460   0011D0  5033               	movf	button_read_state@btn_logic_state^0,w,c
   461   0011D2  A4D8               	btfss	status,2,c
   462   0011D4  EFEE  F008         	goto	u641
   463   0011D8  EFF0  F008         	goto	u640
   464   0011DC                     u641:
   465   0011DC  EFE1  F008         	goto	l1196
   466   0011E0                     u640:
   467   0011E0  EFDB  F008         	goto	l1194
   468   0011E4                     l1208:
   469   0011E4  502E               	movf	button_read_state@btn^0,w,c
   470   0011E6  6ED9               	movwf	fsr2l,c
   471   0011E8  6ADA               	clrf	fsr2h,c
   472   0011EA  0E02               	movlw	2
   473   0011EC  26D9               	addwf	fsr2l,f,c
   474   0011EE  50DF               	movf	indf2,w,c
   475   0011F0  6E30               	movwf	??_button_read_state^0,c
   476   0011F2  6A31               	clrf	(??_button_read_state+1)^0,c
   477                           
   478                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   479                           ; Switch size 1, requested type "simple"
   480                           ; Number of cases is 1, Range of values is 0 to 0
   481                           ; switch strategies available:
   482                           ; Name         Instructions Cycles
   483                           ; simple_byte            4     3 (average)
   484                           ;	Chosen strategy is simple_byte
   485   0011F4  5031               	movf	(??_button_read_state+1)^0,w,c
   486   0011F6  0A00               	xorlw	0	; case 0
   487   0011F8  B4D8               	btfsc	status,2,c
   488   0011FA  EF01  F009         	goto	l1254
   489   0011FE  EFC6  F008         	goto	l1188
   490   001202                     l1254:
   491                           
   492                           ; Switch size 1, requested type "simple"
   493                           ; Number of cases is 2, Range of values is 0 to 1
   494                           ; switch strategies available:
   495                           ; Name         Instructions Cycles
   496                           ; simple_byte            7     4 (average)
   497                           ;	Chosen strategy is simple_byte
   498   001202  5030               	movf	??_button_read_state^0,w,c
   499   001204  0A00               	xorlw	0	; case 0
   500   001206  B4D8               	btfsc	status,2,c
   501   001208  EFD3  F008         	goto	l1192
   502   00120C  0A01               	xorlw	1	; case 1
   503   00120E  B4D8               	btfsc	status,2,c
   504   001210  EFE8  F008         	goto	l1198
   505   001214  EFC6  F008         	goto	l1188
   506   001218                     l1210:
   507                           
   508                           ;Ecu_Layer/PUSH_BUTTON/ecu_push_button.c: 94:     return return_value;
   509   001218  5032               	movf	button_read_state@return_value^0,w,c
   510   00121A  0012               	return		;funcret
   511   00121C                     __end_of_button_read_state:
   512                           	callstack 0
   513                           
   514 ;; *************** function _gpio_pin_read_logic *****************
   515 ;; Defined at:
   516 ;;		line 107 in file "Mcal_Layer/GPIO/hal_gpio.c"
   517 ;; Parameters:    Size  Location     Type
   518 ;;  pin_config      1    0[COMRAM] const PTR const struct .
   519 ;;		 -> btn2(3), btn1(3), 
   520 ;;  logic           1    1[COMRAM] const PTR enum E2816
   521 ;;		 -> button_read_state@btn_logic_state(1), 
   522 ;; Auto vars:     Size  Location     Type
   523 ;;  return_value    1    6[COMRAM] unsigned char 
   524 ;; Return value:  Size  Location     Type
   525 ;;                  1    wreg      unsigned char 
   526 ;; Registers used:
   527 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   528 ;; Tracked objects:
   529 ;;		On entry : 0/0
   530 ;;		On exit  : 0/0
   531 ;;		Unchanged: 0/0
   532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   533 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   534 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   535 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   536 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   537 ;;Total ram usage:        7 bytes
   538 ;; Hardware stack levels used: 1
   539 ;; This function calls:
   540 ;;		Nothing
   541 ;; This function is called by:
   542 ;;		_button_read_state
   543 ;; This function uses a non-reentrant model
   544 ;;
   545                           
   546                           	psect	text2
   547   00121C                     __ptext2:
   548                           	callstack 0
   549   00121C                     _gpio_pin_read_logic:
   550                           	callstack 29
   551   00121C                     
   552                           ;Mcal_Layer/GPIO/hal_gpio.c: 107: Std_ReturnType gpio_pin_read_logic(const pin_config_t 
      +                          * const pin_config, logic_t * const logic);Mcal_Layer/GPIO/hal_gpio.c: 108: {;Mcal_Layer
      +                          /GPIO/hal_gpio.c: 109:     Std_ReturnType return_value = (Std_ReturnType)0x01;
   553   00121C  0E01               	movlw	1
   554   00121E  6E2D               	movwf	gpio_pin_read_logic@return_value^0,c
   555                           
   556                           ;Mcal_Layer/GPIO/hal_gpio.c: 111:     if((((void*)0) == pin_config) || (((void*)0) == lo
      +                          gic))
   557   001220  5027               	movf	gpio_pin_read_logic@pin_config^0,w,c
   558   001222  B4D8               	btfsc	status,2,c
   559   001224  EF16  F009         	goto	u531
   560   001228  EF18  F009         	goto	u530
   561   00122C                     u531:
   562   00122C  EF20  F009         	goto	l1158
   563   001230                     u530:
   564   001230  5028               	movf	gpio_pin_read_logic@logic^0,w,c
   565   001232  A4D8               	btfss	status,2,c
   566   001234  EF1E  F009         	goto	u541
   567   001238  EF20  F009         	goto	u540
   568   00123C                     u541:
   569   00123C  EF24  F009         	goto	l1160
   570   001240                     u540:
   571   001240                     l1158:
   572                           
   573                           ;Mcal_Layer/GPIO/hal_gpio.c: 112:     {;Mcal_Layer/GPIO/hal_gpio.c: 113:         return_
      +                          value = (Std_ReturnType)0x00;
   574   001240  0E00               	movlw	0
   575   001242  6E2D               	movwf	gpio_pin_read_logic@return_value^0,c
   576                           
   577                           ;Mcal_Layer/GPIO/hal_gpio.c: 114:     }
   578   001244  EF4E  F009         	goto	l1162
   579   001248                     l1160:
   580                           
   581                           ;Mcal_Layer/GPIO/hal_gpio.c: 116:     {;Mcal_Layer/GPIO/hal_gpio.c: 117:         *logic 
      +                          = ((*port_registers[pin_config->port] >> pin_config->pin) & (uint8)1);
   582   001248  5028               	movf	gpio_pin_read_logic@logic^0,w,c
   583   00124A  6ED9               	movwf	fsr2l,c
   584   00124C  6ADA               	clrf	fsr2h,c
   585   00124E  5027               	movf	gpio_pin_read_logic@pin_config^0,w,c
   586   001250  6EE1               	movwf	fsr1l,c
   587   001252  6AE2               	clrf	fsr1h,c
   588   001254  30E7               	rrcf	231,w,c
   589   001256  32E8               	rrcf	wreg,f,c
   590   001258  32E8               	rrcf	wreg,f,c
   591   00125A  0B07               	andlw	7
   592   00125C  6E29               	movwf	??_gpio_pin_read_logic^0,c
   593   00125E  5027               	movf	gpio_pin_read_logic@pin_config^0,w,c
   594   001260  6EE1               	movwf	fsr1l,c
   595   001262  6AE2               	clrf	fsr1h,c
   596   001264  50E7               	movf	231,w,c
   597   001266  0B07               	andlw	7
   598   001268  0D02               	mullw	2
   599   00126A  50F3               	movf	243,w,c
   600   00126C  0F01               	addlw	low _port_registers
   601   00126E  6EE1               	movwf	fsr1l,c
   602   001270  6AE2               	clrf	fsr1h,c
   603   001272  CFE6 F02A          	movff	postinc1,??_gpio_pin_read_logic+1
   604   001276  CFE5 F02B          	movff	postdec1,??_gpio_pin_read_logic+2
   605   00127A  C02A  FFE1         	movff	??_gpio_pin_read_logic+1,fsr1l
   606   00127E  C02B  FFE2         	movff	??_gpio_pin_read_logic+2,fsr1h
   607   001282  50E7               	movf	indf1,w,c
   608   001284  6E2C               	movwf	(??_gpio_pin_read_logic+3)^0,c
   609   001286  2A29               	incf	??_gpio_pin_read_logic^0,f,c
   610   001288  EF48  F009         	goto	u554
   611   00128C                     u555:
   612   00128C  90D8               	bcf	status,0,c
   613   00128E  322C               	rrcf	(??_gpio_pin_read_logic+3)^0,f,c
   614   001290                     u554:
   615   001290  2E29               	decfsz	??_gpio_pin_read_logic^0,f,c
   616   001292  EF46  F009         	goto	u555
   617   001296  502C               	movf	(??_gpio_pin_read_logic+3)^0,w,c
   618   001298  0B01               	andlw	1
   619   00129A  6EDF               	movwf	indf2,c
   620   00129C                     l1162:
   621                           
   622                           ;Mcal_Layer/GPIO/hal_gpio.c: 120:     return return_value;
   623   00129C  502D               	movf	gpio_pin_read_logic@return_value^0,w,c
   624   00129E  0012               	return		;funcret
   625   0012A0                     __end_of_gpio_pin_read_logic:
   626                           	callstack 0
   627                           
   628 ;; *************** function _button_initialize *****************
   629 ;; Defined at:
   630 ;;		line 17 in file "Ecu_Layer/PUSH_BUTTON/ecu_push_button.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;  btn             1    7[COMRAM] const PTR const struct .
   633 ;;		 -> btn2(3), btn1(3), 
   634 ;; Auto vars:     Size  Location     Type
   635 ;;  return_value    1    9[COMRAM] unsigned char 
   636 ;; Return value:  Size  Location     Type
   637 ;;                  1    wreg      unsigned char 
   638 ;; Registers used:
   639 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   640 ;; Tracked objects:
   641 ;;		On entry : 0/0
   642 ;;		On exit  : 0/0
   643 ;;		Unchanged: 0/0
   644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   645 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   646 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   647 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   648 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   649 ;;Total ram usage:        3 bytes
   650 ;; Hardware stack levels used: 1
   651 ;; Hardware stack levels required when called: 1
   652 ;; This function calls:
   653 ;;		_gpio_pin_direction_intialize
   654 ;; This function is called by:
   655 ;;		_main
   656 ;; This function uses a non-reentrant model
   657 ;;
   658                           
   659                           	psect	text3
   660   0012A0                     __ptext3:
   661                           	callstack 0
   662   0012A0                     _button_initialize:
   663                           	callstack 29
   664   0012A0                     
   665                           ;Ecu_Layer/PUSH_BUTTON/ecu_push_button.c: 21:     if((((void*)0) == btn) ||
   666   0012A0  502E               	movf	button_initialize@btn^0,w,c
   667   0012A2  B4D8               	btfsc	status,2,c
   668   0012A4  EF56  F009         	goto	u561
   669   0012A8  EF58  F009         	goto	u560
   670   0012AC                     u561:
   671   0012AC  EF76  F009         	goto	l1172
   672   0012B0                     u560:
   673   0012B0  502E               	movf	button_initialize@btn^0,w,c
   674   0012B2  6ED9               	movwf	fsr2l,c
   675   0012B4  6ADA               	clrf	fsr2h,c
   676   0012B6  30DF               	rrcf	223,w,c
   677   0012B8  32E8               	rrcf	wreg,f,c
   678   0012BA  32E8               	rrcf	wreg,f,c
   679   0012BC  0B07               	andlw	7
   680   0012BE  6E2F               	movwf	??_button_initialize^0,c
   681   0012C0  0E08               	movlw	8
   682   0012C2  602F               	cpfslt	??_button_initialize^0,c
   683   0012C4  EF66  F009         	goto	u571
   684   0012C8  EF68  F009         	goto	u570
   685   0012CC                     u571:
   686   0012CC  EF76  F009         	goto	l1172
   687   0012D0                     u570:
   688   0012D0  502E               	movf	button_initialize@btn^0,w,c
   689   0012D2  6ED9               	movwf	fsr2l,c
   690   0012D4  6ADA               	clrf	fsr2h,c
   691   0012D6  50DF               	movf	223,w,c
   692   0012D8  0B07               	andlw	7
   693   0012DA  6E2F               	movwf	??_button_initialize^0,c
   694   0012DC  0E04               	movlw	4
   695   0012DE  642F               	cpfsgt	??_button_initialize^0,c
   696   0012E0  EF74  F009         	goto	u581
   697   0012E4  EF76  F009         	goto	u580
   698   0012E8                     u581:
   699   0012E8  EF7A  F009         	goto	l1174
   700   0012EC                     u580:
   701   0012EC                     l1172:
   702                           
   703                           ;Ecu_Layer/PUSH_BUTTON/ecu_push_button.c: 24:     {;Ecu_Layer/PUSH_BUTTON/ecu_push_butto
      +                          n.c: 25:         return_value = (Std_ReturnType)0x00;
   704   0012EC  0E00               	movlw	0
   705   0012EE  6E30               	movwf	button_initialize@return_value^0,c
   706                           
   707                           ;Ecu_Layer/PUSH_BUTTON/ecu_push_button.c: 26:     }
   708   0012F0  EF7F  F009         	goto	l1176
   709   0012F4                     l1174:
   710                           
   711                           ;Ecu_Layer/PUSH_BUTTON/ecu_push_button.c: 28:     {;Ecu_Layer/PUSH_BUTTON/ecu_push_butto
      +                          n.c: 29:         return_value = gpio_pin_direction_intialize(&(btn->button_pin));
   712   0012F4  C02E  F027         	movff	button_initialize@btn,gpio_pin_direction_intialize@pin_config
   713   0012F8  EC01  F008         	call	_gpio_pin_direction_intialize	;wreg free
   714   0012FC  6E30               	movwf	button_initialize@return_value^0,c
   715   0012FE                     l1176:
   716                           
   717                           ;Ecu_Layer/PUSH_BUTTON/ecu_push_button.c: 32:     return return_value;
   718   0012FE  5030               	movf	button_initialize@return_value^0,w,c
   719   001300  0012               	return		;funcret
   720   001302                     __end_of_button_initialize:
   721                           	callstack 0
   722                           
   723 ;; *************** function _gpio_pin_direction_intialize *****************
   724 ;; Defined at:
   725 ;;		line 17 in file "Mcal_Layer/GPIO/hal_gpio.c"
   726 ;; Parameters:    Size  Location     Type
   727 ;;  pin_config      1    0[COMRAM] const PTR const struct .
   728 ;;		 -> btn2(3), btn1(3), 
   729 ;; Auto vars:     Size  Location     Type
   730 ;;  return_value    1    6[COMRAM] unsigned char 
   731 ;; Return value:  Size  Location     Type
   732 ;;                  1    wreg      unsigned char 
   733 ;; Registers used:
   734 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   735 ;; Tracked objects:
   736 ;;		On entry : 0/0
   737 ;;		On exit  : 0/0
   738 ;;		Unchanged: 0/0
   739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   740 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   741 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   742 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   743 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   744 ;;Total ram usage:        7 bytes
   745 ;; Hardware stack levels used: 1
   746 ;; This function calls:
   747 ;;		Nothing
   748 ;; This function is called by:
   749 ;;		_button_initialize
   750 ;;		_gpio_pin_intialize
   751 ;; This function uses a non-reentrant model
   752 ;;
   753                           
   754                           	psect	text4
   755   001002                     __ptext4:
   756                           	callstack 0
   757   001002                     _gpio_pin_direction_intialize:
   758                           	callstack 29
   759   001002                     
   760                           ;Mcal_Layer/GPIO/hal_gpio.c: 17: Std_ReturnType gpio_pin_direction_intialize(const pin_c
      +                          onfig_t * const pin_config);Mcal_Layer/GPIO/hal_gpio.c: 18: {;Mcal_Layer/GPIO/hal_gpio.c
      +                          : 19:     Std_ReturnType return_value = (Std_ReturnType)0x01;
   761   001002  0E01               	movlw	1
   762   001004  6E2D               	movwf	gpio_pin_direction_intialize@return_value^0,c
   763                           
   764                           ;Mcal_Layer/GPIO/hal_gpio.c: 21:     if((((void*)0) == pin_config) || (((uint8)8 - 1) < 
      +                          pin_config->pin) || (((uint8)5 - 1) < pin_config->port))
   765   001006  5027               	movf	gpio_pin_direction_intialize@pin_config^0,w,c
   766   001008  B4D8               	btfsc	status,2,c
   767   00100A  EF09  F008         	goto	u471
   768   00100E  EF0B  F008         	goto	u470
   769   001012                     u471:
   770   001012  EF29  F008         	goto	l1140
   771   001016                     u470:
   772   001016  5027               	movf	gpio_pin_direction_intialize@pin_config^0,w,c
   773   001018  6ED9               	movwf	fsr2l,c
   774   00101A  6ADA               	clrf	fsr2h,c
   775   00101C  30DF               	rrcf	223,w,c
   776   00101E  32E8               	rrcf	wreg,f,c
   777   001020  32E8               	rrcf	wreg,f,c
   778   001022  0B07               	andlw	7
   779   001024  6E28               	movwf	??_gpio_pin_direction_intialize^0,c
   780   001026  0E08               	movlw	8
   781   001028  6028               	cpfslt	??_gpio_pin_direction_intialize^0,c
   782   00102A  EF19  F008         	goto	u481
   783   00102E  EF1B  F008         	goto	u480
   784   001032                     u481:
   785   001032  EF29  F008         	goto	l1140
   786   001036                     u480:
   787   001036  5027               	movf	gpio_pin_direction_intialize@pin_config^0,w,c
   788   001038  6ED9               	movwf	fsr2l,c
   789   00103A  6ADA               	clrf	fsr2h,c
   790   00103C  50DF               	movf	223,w,c
   791   00103E  0B07               	andlw	7
   792   001040  6E28               	movwf	??_gpio_pin_direction_intialize^0,c
   793   001042  0E04               	movlw	4
   794   001044  6428               	cpfsgt	??_gpio_pin_direction_intialize^0,c
   795   001046  EF27  F008         	goto	u491
   796   00104A  EF29  F008         	goto	u490
   797   00104E                     u491:
   798   00104E  EF80  F008         	goto	l1148
   799   001052                     u490:
   800   001052                     l1140:
   801                           
   802                           ;Mcal_Layer/GPIO/hal_gpio.c: 22:     {;Mcal_Layer/GPIO/hal_gpio.c: 23:         return_va
      +                          lue = (Std_ReturnType)0x00;
   803   001052  0E00               	movlw	0
   804   001054  6E2D               	movwf	gpio_pin_direction_intialize@return_value^0,c
   805                           
   806                           ;Mcal_Layer/GPIO/hal_gpio.c: 24:     }
   807   001056  EF96  F008         	goto	l1150
   808   00105A                     l1142:
   809                           
   810                           ;Mcal_Layer/GPIO/hal_gpio.c: 30:                 (*tris_registers[pin_config->port] &= ~
      +                          ((uint8)1 << pin_config->pin));
   811   00105A  5027               	movf	gpio_pin_direction_intialize@pin_config^0,w,c
   812   00105C  6ED9               	movwf	fsr2l,c
   813   00105E  6ADA               	clrf	fsr2h,c
   814   001060  30DF               	rrcf	223,w,c
   815   001062  32E8               	rrcf	wreg,f,c
   816   001064  32E8               	rrcf	wreg,f,c
   817   001066  0B07               	andlw	7
   818   001068  6E28               	movwf	??_gpio_pin_direction_intialize^0,c
   819   00106A  0E01               	movlw	1
   820   00106C  6E29               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
   821   00106E  2A28               	incf	??_gpio_pin_direction_intialize^0,f,c
   822   001070  EF3C  F008         	goto	u504
   823   001074                     u505:
   824   001074  90D8               	bcf	status,0,c
   825   001076  3629               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
   826   001078                     u504:
   827   001078  2E28               	decfsz	??_gpio_pin_direction_intialize^0,f,c
   828   00107A  EF3A  F008         	goto	u505
   829   00107E  5029               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
   830   001080  0AFF               	xorlw	255
   831   001082  6E2A               	movwf	(??_gpio_pin_direction_intialize+2)^0,c
   832   001084  5027               	movf	gpio_pin_direction_intialize@pin_config^0,w,c
   833   001086  6ED9               	movwf	fsr2l,c
   834   001088  6ADA               	clrf	fsr2h,c
   835   00108A  50DF               	movf	223,w,c
   836   00108C  0B07               	andlw	7
   837   00108E  0D02               	mullw	2
   838   001090  50F3               	movf	243,w,c
   839   001092  0F15               	addlw	low _tris_registers
   840   001094  6ED9               	movwf	fsr2l,c
   841   001096  6ADA               	clrf	fsr2h,c
   842   001098  CFDE F02B          	movff	postinc2,??_gpio_pin_direction_intialize+3
   843   00109C  CFDD F02C          	movff	postdec2,??_gpio_pin_direction_intialize+4
   844   0010A0  C02B  FFD9         	movff	??_gpio_pin_direction_intialize+3,fsr2l
   845   0010A4  C02C  FFDA         	movff	??_gpio_pin_direction_intialize+4,fsr2h
   846   0010A8  502A               	movf	(??_gpio_pin_direction_intialize+2)^0,w,c
   847   0010AA  16DF               	andwf	indf2,f,c
   848                           
   849                           ;Mcal_Layer/GPIO/hal_gpio.c: 31:                 break;
   850   0010AC  EF96  F008         	goto	l1150
   851   0010B0                     l1144:
   852                           
   853                           ;Mcal_Layer/GPIO/hal_gpio.c: 34:                 (*tris_registers[pin_config->port] |= (
      +                          (uint8)1 << pin_config->pin));
   854   0010B0  5027               	movf	gpio_pin_direction_intialize@pin_config^0,w,c
   855   0010B2  6ED9               	movwf	fsr2l,c
   856   0010B4  6ADA               	clrf	fsr2h,c
   857   0010B6  30DF               	rrcf	223,w,c
   858   0010B8  32E8               	rrcf	wreg,f,c
   859   0010BA  32E8               	rrcf	wreg,f,c
   860   0010BC  0B07               	andlw	7
   861   0010BE  6E28               	movwf	??_gpio_pin_direction_intialize^0,c
   862   0010C0  0E01               	movlw	1
   863   0010C2  6E29               	movwf	(??_gpio_pin_direction_intialize+1)^0,c
   864   0010C4  2A28               	incf	??_gpio_pin_direction_intialize^0,f,c
   865   0010C6  EF67  F008         	goto	u514
   866   0010CA                     u515:
   867   0010CA  90D8               	bcf	status,0,c
   868   0010CC  3629               	rlcf	(??_gpio_pin_direction_intialize+1)^0,f,c
   869   0010CE                     u514:
   870   0010CE  2E28               	decfsz	??_gpio_pin_direction_intialize^0,f,c
   871   0010D0  EF65  F008         	goto	u515
   872   0010D4  5027               	movf	gpio_pin_direction_intialize@pin_config^0,w,c
   873   0010D6  6ED9               	movwf	fsr2l,c
   874   0010D8  6ADA               	clrf	fsr2h,c
   875   0010DA  50DF               	movf	223,w,c
   876   0010DC  0B07               	andlw	7
   877   0010DE  0D02               	mullw	2
   878   0010E0  50F3               	movf	243,w,c
   879   0010E2  0F15               	addlw	low _tris_registers
   880   0010E4  6ED9               	movwf	fsr2l,c
   881   0010E6  6ADA               	clrf	fsr2h,c
   882   0010E8  CFDE F02A          	movff	postinc2,??_gpio_pin_direction_intialize+2
   883   0010EC  CFDD F02B          	movff	postdec2,??_gpio_pin_direction_intialize+3
   884   0010F0  C02A  FFD9         	movff	??_gpio_pin_direction_intialize+2,fsr2l
   885   0010F4  C02B  FFDA         	movff	??_gpio_pin_direction_intialize+3,fsr2h
   886   0010F8  5029               	movf	(??_gpio_pin_direction_intialize+1)^0,w,c
   887   0010FA  12DF               	iorwf	indf2,f,c
   888                           
   889                           ;Mcal_Layer/GPIO/hal_gpio.c: 35:                 break;
   890   0010FC  EF96  F008         	goto	l1150
   891   001100                     l1148:
   892   001100  5027               	movf	gpio_pin_direction_intialize@pin_config^0,w,c
   893   001102  6ED9               	movwf	fsr2l,c
   894   001104  6ADA               	clrf	fsr2h,c
   895   001106  BCDF               	btfsc	indf2,6,c
   896   001108  EF88  F008         	goto	u521
   897   00110C  EF8B  F008         	goto	u520
   898   001110                     u521:
   899   001110  0E01               	movlw	1
   900   001112  EF8C  F008         	goto	u526
   901   001116                     u520:
   902   001116  0E00               	movlw	0
   903   001118                     u526:
   904                           
   905                           ; Switch size 1, requested type "simple"
   906                           ; Number of cases is 2, Range of values is 0 to 1
   907                           ; switch strategies available:
   908                           ; Name         Instructions Cycles
   909                           ; simple_byte            7     4 (average)
   910                           ;	Chosen strategy is simple_byte
   911   001118  0A00               	xorlw	0	; case 0
   912   00111A  B4D8               	btfsc	status,2,c
   913   00111C  EF2D  F008         	goto	l1142
   914   001120  0A01               	xorlw	1	; case 1
   915   001122  B4D8               	btfsc	status,2,c
   916   001124  EF58  F008         	goto	l1144
   917   001128  EF29  F008         	goto	l1140
   918   00112C                     l1150:
   919                           
   920                           ;Mcal_Layer/GPIO/hal_gpio.c: 42:     return return_value;
   921   00112C  502D               	movf	gpio_pin_direction_intialize@return_value^0,w,c
   922   00112E  0012               	return		;funcret
   923   001130                     __end_of_gpio_pin_direction_intialize:
   924                           	callstack 0
   925                           
   926                           	psect	smallconst
   927   001000                     __psmallconst:
   928                           	callstack 0
   929   001000  00                 	db	0
   930   001001  00                 	db	0	; dummy byte at the end
   931   000000                     
   932                           	psect	rparam
   933   000000                     
   934                           	psect	config
   935                           
   936                           ; Padding undefined space
   937   300000                     	org	3145728
   938   300000  FF                 	db	255
   939                           
   940                           ;Config register CONFIG1H @ 0x300001
   941                           ;	Oscillator Selection bits
   942                           ;	OSC = HS, HS oscillator
   943                           ;	Fail-Safe Clock Monitor Enable bit
   944                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
   945                           ;	Internal/External Oscillator Switchover bit
   946                           ;	IESO = OFF, Oscillator Switchover mode disabled
   947   300001                     	org	3145729
   948   300001  02                 	db	2
   949                           
   950                           ;Config register CONFIG2L @ 0x300002
   951                           ;	Power-up Timer Enable bit
   952                           ;	PWRT = OFF, PWRT disabled
   953                           ;	Brown-out Reset Enable bits
   954                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
   955                           ;	Brown Out Reset Voltage bits
   956                           ;	BORV = 1, 
   957   300002                     	org	3145730
   958   300002  09                 	db	9
   959                           
   960                           ;Config register CONFIG2H @ 0x300003
   961                           ;	Watchdog Timer Enable bit
   962                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   963                           ;	Watchdog Timer Postscale Select bits
   964                           ;	WDTPS = 32768, 1:32768
   965   300003                     	org	3145731
   966   300003  1E                 	db	30
   967                           
   968                           ; Padding undefined space
   969   300004                     	org	3145732
   970   300004  FF                 	db	255
   971                           
   972                           ;Config register CONFIG3H @ 0x300005
   973                           ;	CCP2 MUX bit
   974                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
   975                           ;	PORTB A/D Enable bit
   976                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
   977                           ;	Low-Power Timer1 Oscillator Enable bit
   978                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
   979                           ;	MCLR Pin Enable bit
   980                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
   981   300005                     	org	3145733
   982   300005  81                 	db	129
   983                           
   984                           ;Config register CONFIG4L @ 0x300006
   985                           ;	Stack Full/Underflow Reset Enable bit
   986                           ;	STVREN = ON, Stack full/underflow will cause Reset
   987                           ;	Single-Supply ICSP Enable bit
   988                           ;	LVP = OFF, Single-Supply ICSP disabled
   989                           ;	Extended Instruction Set Enable bit
   990                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
   991                           ;	Background Debugger Enable bit
   992                           ;	DEBUG = 0x1, unprogrammed default
   993   300006                     	org	3145734
   994   300006  81                 	db	129
   995                           
   996                           ; Padding undefined space
   997   300007                     	org	3145735
   998   300007  FF                 	db	255
   999                           
  1000                           ;Config register CONFIG5L @ 0x300008
  1001                           ;	Code Protection bit
  1002                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1003                           ;	Code Protection bit
  1004                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1005                           ;	Code Protection bit
  1006                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1007                           ;	Code Protection bit
  1008                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1009   300008                     	org	3145736
  1010   300008  0F                 	db	15
  1011                           
  1012                           ;Config register CONFIG5H @ 0x300009
  1013                           ;	Boot Block Code Protection bit
  1014                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1015                           ;	Data EEPROM Code Protection bit
  1016                           ;	CPD = OFF, Data EEPROM not code-protected
  1017   300009                     	org	3145737
  1018   300009  C0                 	db	192
  1019                           
  1020                           ;Config register CONFIG6L @ 0x30000A
  1021                           ;	Write Protection bit
  1022                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1023                           ;	Write Protection bit
  1024                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1025                           ;	Write Protection bit
  1026                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1027                           ;	Write Protection bit
  1028                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  1029   30000A                     	org	3145738
  1030   30000A  0F                 	db	15
  1031                           
  1032                           ;Config register CONFIG6H @ 0x30000B
  1033                           ;	Configuration Register Write Protection bit
  1034                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1035                           ;	Boot Block Write Protection bit
  1036                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1037                           ;	Data EEPROM Write Protection bit
  1038                           ;	WRTD = OFF, Data EEPROM not write-protected
  1039   30000B                     	org	3145739
  1040   30000B  E0                 	db	224
  1041                           
  1042                           ;Config register CONFIG7L @ 0x30000C
  1043                           ;	Table Read Protection bit
  1044                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1045                           ;	Table Read Protection bit
  1046                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1047                           ;	Table Read Protection bit
  1048                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1049                           ;	Table Read Protection bit
  1050                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1051   30000C                     	org	3145740
  1052   30000C  0F                 	db	15
  1053                           
  1054                           ;Config register CONFIG7H @ 0x30000D
  1055                           ;	Boot Block Table Read Protection bit
  1056                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1057   30000D                     	org	3145741
  1058   30000D  40                 	db	64
  1059                           tosu	equ	0xFFF
  1060                           tosh	equ	0xFFE
  1061                           tosl	equ	0xFFD
  1062                           stkptr	equ	0xFFC
  1063                           pclatu	equ	0xFFB
  1064                           pclath	equ	0xFFA
  1065                           pcl	equ	0xFF9
  1066                           tblptru	equ	0xFF8
  1067                           tblptrh	equ	0xFF7
  1068                           tblptrl	equ	0xFF6
  1069                           tablat	equ	0xFF5
  1070                           prodh	equ	0xFF4
  1071                           prodl	equ	0xFF3
  1072                           indf0	equ	0xFEF
  1073                           postinc0	equ	0xFEE
  1074                           postdec0	equ	0xFED
  1075                           preinc0	equ	0xFEC
  1076                           plusw0	equ	0xFEB
  1077                           fsr0h	equ	0xFEA
  1078                           fsr0l	equ	0xFE9
  1079                           wreg	equ	0xFE8
  1080                           indf1	equ	0xFE7
  1081                           postinc1	equ	0xFE6
  1082                           postdec1	equ	0xFE5
  1083                           preinc1	equ	0xFE4
  1084                           plusw1	equ	0xFE3
  1085                           fsr1h	equ	0xFE2
  1086                           fsr1l	equ	0xFE1
  1087                           bsr	equ	0xFE0
  1088                           indf2	equ	0xFDF
  1089                           postinc2	equ	0xFDE
  1090                           postdec2	equ	0xFDD
  1091                           preinc2	equ	0xFDC
  1092                           plusw2	equ	0xFDB
  1093                           fsr2h	equ	0xFDA
  1094                           fsr2l	equ	0xFD9
  1095                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        38
    BSS         0
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     13      53
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    button_initialize@btn	const PTR const struct . size(1) Largest target is 3
		 -> btn1(COMRAM[3]), btn2(COMRAM[3]), 

    button_read_state@btn	const PTR const struct . size(1) Largest target is 3
		 -> btn1(COMRAM[3]), btn2(COMRAM[3]), 

    button_read_state@btn_state	const PTR enum E2896 size(1) Largest target is 1
		 -> btn1_state(COMRAM[1]), btn2_state(COMRAM[1]), 

    gpio_pin_direction_intialize@pin_config	const PTR const struct . size(1) Largest target is 3
		 -> btn1(COMRAM[3]), btn2(COMRAM[3]), 

    gpio_pin_read_logic@logic	const PTR enum E2816 size(1) Largest target is 1
		 -> button_read_state@btn_logic_state(COMRAM[1]), 

    gpio_pin_read_logic@pin_config	const PTR const struct . size(1) Largest target is 3
		 -> btn1(COMRAM[3]), btn2(COMRAM[3]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 


Critical Paths under _main in COMRAM

    _main->_button_read_state
    _button_read_state->_gpio_pin_read_logic
    _button_initialize->_gpio_pin_direction_intialize

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1522
                  _button_initialize
                  _button_read_state
 ---------------------------------------------------------------------------------
 (1) _button_read_state                                    6     4      2     904
                                              7 COMRAM     6     4      2
                _gpio_pin_read_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_read_logic                                  7     5      2     286
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) _button_initialize                                    3     2      1     618
                                              7 COMRAM     3     2      1
       _gpio_pin_direction_intialize
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_direction_intialize                         7     6      1     353
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _button_initialize
     _gpio_pin_direction_intialize
   _button_read_state
     _gpio_pin_read_logic

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F      D      35       1       41.7%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      35      39        0.0%
DATA                 0      0      35       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Jun 30 19:40:29 2024

                                      l82 112E                                       l106 129E  
                                     l180 1300                                       l196 121A  
                                     u520 1116                                       u504 1078  
                                     u600 1150                                       u521 1110  
                                     u505 1074                                       u601 114C  
                                     u514 10CE                                       u530 1230  
                                     u610 1170                                       u515 10CA  
                                     u531 122C                                       u611 116C  
                                     u540 1240                                       u620 118C  
                                     u541 123C                                       u621 1188  
                                     u526 1118                                       u470 1016  
                                     u630 11B6                                       u471 1012  
                                     u631 11B2                                       u480 1036  
                                     u560 12B0                                       u640 11E0  
                                     u481 1032                                       u561 12AC  
                                     u641 11DC                                       u490 1052  
                                     u570 12D0                                       u554 1290  
                                     u491 104E                                       u571 12CC  
                                     u555 128C                                       u580 12EC  
                                     u581 12E8                                       u590 1140  
                                     u591 113C                                       wreg 0FE8  
                                    l1210 1218                                      l1140 1052  
                                    l1142 105A                                      l1150 112C  
                                    l1134 1002                                      l1144 10B0  
                                    l1136 1016                                      l1160 1248  
                                    l1208 11E4                                      l1138 1036  
                                    l1170 12D0                                      l1162 129C  
                                    l1154 121C                                      l1148 1100  
                                    l1172 12EC                                      l1156 1230  
                                    l1180 1130                                      l1244 1302  
                                    l1174 12F4                                      l1166 12A0  
                                    l1158 1240                                      l1254 1202  
                                    l1190 1194                                      l1182 1140  
                                    l1246 1316                                      l1176 12FE  
                                    l1168 12B0                                      l1192 11A6  
                                    l1184 1150                                      l1248 1324  
                                    l1194 11B6                                      l1186 1170  
                                    l1196 11C2                                      l1188 118C  
                                    l1198 11D0                                      _LATA 0F89  
                                    _LATB 0F8A                                      _LATC 0F8B  
                                    _LATD 0F8C                                      _LATE 0F8D  
                                    _btn1 0022                                      _btn2 001F  
                                    _main 1302                                      fsr1h 0FE2  
                                    fsr2h 0FDA                                      indf1 0FE7  
                                    indf2 0FDF                                      fsr1l 0FE1  
                                    fsr2l 0FD9                                      prodl 0FF3  
                                    start 0000                              ___param_bank 0000  
gpio_pin_direction_intialize@return_value 002D                                     ?_main 0027  
                                   _PORTA 0F80                                     _PORTB 0F81  
                                   _PORTC 0F82                                     _PORTD 0F83  
                                   _PORTE 0F84                                     _TRISA 0F92  
                                   _TRISB 0F93                                     _TRISC 0F94  
                                   _TRISD 0F95                                     _TRISE 0F96  
                                   tablat 0FF5                                     status 0FD8  
                         __initialization 133A                              __end_of_main 133A  
           gpio_pin_read_logic@pin_config 0027                  gpio_pin_read_logic@logic 0028  
                           _lat_registers 000B                                    ??_main 0034  
                           __activetblptr 0002                         _button_initialize 12A0  
                       _button_read_state 1130                        ?_button_initialize 002E  
                      ?_button_read_state 002E                       ??_button_initialize 002F  
                     ??_button_read_state 0030                                    isa$std 0001  
                            __pdataCOMRAM 0001                 __end_of_button_initialize 1302  
                            __mediumconst 0000                 __end_of_button_read_state 121C  
                                  tblptrh 0FF7                                    tblptrl 0FF6  
                                  tblptru 0FF8                                __accesstop 0080  
                 __end_of__initialization 135A                             ___rparam_used 0001  
                          __pcstackCOMRAM 0027                      button_initialize@btn 002E  
         gpio_pin_read_logic@return_value 002D                                __pnvCOMRAM 0034  
                              _btn1_state 0026                                _btn2_state 0025  
                    button_read_state@btn 002E             button_initialize@return_value 0030  
                          _tris_registers 0015                                   __Hparam 0000  
                                 __Lparam 0000                       _gpio_pin_read_logic 121C  
                            __psmallconst 1000                                   __pcinit 133A  
                                 __ramtop 1000             button_read_state@return_value 0032  
                                 __ptext0 1302                                   __ptext1 1130  
                                 __ptext2 121C                                   __ptext3 12A0  
                                 __ptext4 1002                      ?_gpio_pin_read_logic 0027  
                    end_of_initialization 135A                             __Lmediumconst 0000  
                                 postdec1 0FE5                                   postdec2 0FDD  
                                 postinc0 0FEE                                   postinc1 0FE6  
                                 postinc2 0FDE                button_read_state@btn_state 002F  
    __end_of_gpio_pin_direction_intialize 1130              _gpio_pin_direction_intialize 1002  
                   ??_gpio_pin_read_logic 0029                             __pidataCOMRAM 1364  
                     start_initialization 133A             ?_gpio_pin_direction_intialize 0027  
                             __smallconst 1000            ??_gpio_pin_direction_intialize 0028  
        button_read_state@btn_logic_state 0033                                 copy_data0 134E  
                                __Hrparam 0000                                  __Lrparam 0000  
             __end_of_gpio_pin_read_logic 12A0                                  _btn1_ret 0035  
                                _btn2_ret 0034                                  isa$xinst 0000  
  gpio_pin_direction_intialize@pin_config 0027                            _port_registers 0001  
